<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrNobody&#39;s Blog</title>
  
  <subtitle>保持呼吸 不要断气</subtitle>
  <link href="http://mrnobody233.github.io/atom.xml" rel="self"/>
  
  <link href="http://mrnobody233.github.io/"/>
  <updated>2022-11-08T16:42:19.738Z</updated>
  <id>http://mrnobody233.github.io/</id>
  
  <author>
    <name>Mr_Nobody</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试</title>
    <link href="http://mrnobody233.github.io/2022/11/09/%E6%B5%8B%E8%AF%95/"/>
    <id>http://mrnobody233.github.io/2022/11/09/%E6%B5%8B%E8%AF%95/</id>
    <published>2022-11-08T16:27:59.000Z</published>
    <updated>2022-11-08T16:42:19.738Z</updated>
    
    <content type="html"><![CDATA[<h1 class="rainbow" id="显示有问题啊-草"><a class="markdownIt-Anchor" href="#显示有问题啊-草">#</a> 显示有问题啊 草</h1><h1 class="rainbow" id="显示有问题啊-草-2"><a class="markdownIt-Anchor" href="#显示有问题啊-草-2">#</a> 显示有问题啊 草</h1><h1 class="rainbow" id="显示有问题啊-草-3"><a class="markdownIt-Anchor" href="#显示有问题啊-草-3">#</a> 显示有问题啊 草</h1><h1 class="rainbow" id="显示有问题啊-草-4"><a class="markdownIt-Anchor" href="#显示有问题啊-草-4">#</a> 显示有问题啊 草</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 class=&quot;rainbow&quot; id=&quot;显示有问题啊-草&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#显示有问题啊-草&quot;&gt;#&lt;/a&gt; 显示有问题啊 草&lt;/h1&gt;
&lt;h1 class=&quot;rainbow&quot; id=&quot;显示有问题啊-草-2&quot;&gt;&lt;a c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>红辣椒</title>
    <link href="http://mrnobody233.github.io/2022/10/23/%E7%BA%A2%E8%BE%A3%E6%A4%92/"/>
    <id>http://mrnobody233.github.io/2022/10/23/%E7%BA%A2%E8%BE%A3%E6%A4%92/</id>
    <published>2022-10-22T17:32:55.000Z</published>
    <updated>2022-10-23T06:26:08.166Z</updated>
    
    <content type="html"><![CDATA[<p>上一次在宿舍呆这么久的时候应该是在大一上学期，那个时候在工作室每天待的时间不是很长，一般是晚上七点左右到九点下晚自习的时间，结束后我就会回寝室，也记不得自己回去会干什么事，应该是打 CF 或者看 B 站，今天在<span style="color:#ccc">废宅充电器</span>和 L 的帮助下我把几乎所有的东西都搬回了宿舍，这才发现放在工作室里的东西其实有很多，让我不知道该如何收拾，也发现宿舍的桌子上积了一层厚厚灰，中秋节室友给的月饼也放在原处没有动。当我收拾的差不多的时候隔壁室友过来看见我的显示器说用来打游戏一定非常爽，我想也是，也许过不了多久我会给自己买一台主机，玩自己想玩的游戏，做自己想做的事，而不是在别人电脑上下载游戏用他的电脑耽误别人的事。不过这都是后话了，一个室友在问我为什么把东西搬回来的同时并给我递了一个<span style="color:#961d0c">红辣椒</span>。我拿着这个辣椒仔细观摩了一下，很像蛇果，和它不同的是它非常的轻，闻着也有股清淡的辣椒味，他说这个可以当水果吃，可能会有一点辣。我从没这样吃过辣椒，正好最近食欲很差没怎么吃东西，下午正饿着就尝了一口，不知道该怎么形容，就像是炒熟了的青椒味道变得淡了许多，也几乎没有了辣味，水分也比较多。但我并不喜欢吃，我看着被咬了一口的红辣椒想起了一个原本想和某人一起看的动漫电影，它也叫做  <span style="color:#961d0c">《红辣椒》</span>  ，像是惩罚自己一样，我花了一小时的时间把这个<span style="color:#961d0c">红辣椒</span>吃完了。</p><p>感觉今天时间过的特别的慢，也许是换了一个 “陌生” 的环境，也许是做了什么过分的事。当我想要通过学习来麻痹自己时，脑海里也会不受控制的重新复盘，一直重复着同一句话。于是开始重新思考，我总是劝别人不要在脑子不清醒的时候做出重要的决定，其实最不清醒的是我自己。在这种时候我的室友又开始烦我，一边摆出健身的姿势一边说着 “细狗” 这个不知为何突然火起来的词，像是小孩子考了个好成绩迫不及待的想要向父母分享自己的成果一般。我并没有理会他，说过不了几天我就回家，他很疑惑，说自己在寝室一天呆的时间不会很长。现在回想起来好像我们两个人的对话很奇怪。</p><p>在回家之前我应该不会在宿舍写代码，不知为何仿佛在宿舍学习是一种错误，想要干点什么事的时候总会有人会在看着你，甚至站在你边上看你，我很讨厌这种感觉，感觉浑身都不自在。也许是我太过于在乎别人对我的看法，在很早的时候我就因为这个锻炼过自己，比如一个人去食堂吃饭，和这个感受一样，仿佛有人一直盯着你看，于是我会给自己找点事情做，比如玩游戏，刷 b 站，看早就看过的朋友圈之类的。一直到现在我也有这种感觉，让我无法下嘴，明知道没什么人会关注但还是控制不住去揣测人最坏的想法，“他一个人吃饭是不是没有朋友”，“是不是这个人有点问题没有人愿意和他待在一起” 之类的。这些话应该是我对自己的评价，只是把它通过另一种形式表现了出来。有时候我也不知道自己在想什么，每天都过的随心所欲，自由自在，有什么好玩的想法就去实现满足自己，遇到很难选择的事情就去摇个骰子来决定，说好听点就是自由，说难听点就是自私，不过是为了满足自己去做一些无聊的事罢了。</p><p>我以为很晚的时候其实才晚上七点多，为了打发时间，我准备把<span style="color:#961d0c">《红辣椒》</span>看完，它是 2006 年的动漫电影，我很喜欢这种老番，他的画风和剧情花了很大的功夫，当我看完这个动漫的时候我呆住了，这种天马行空的梦境，这宇宙洪波一般的音乐，这印象深刻的<span style="color:#961d0c">paprika</span>，这个动漫到底讲了啥…？我简直喜欢的不的了，因为我就是莫名其妙的人，但其实不是动画莫名其妙，只是我看不懂这个动漫罢了，作者想要表达的东西很多，对于我这种屌丝来说根本无法理解全部含义。我很喜欢这部动漫对于梦境的表达方式，因为我很喜欢做梦，有个很有名的人说  <ins class="wavy">“梦是本能欲望无法满足后，潜意识伪装表达的产物”</ins>，但我大部分做的梦都是莫名其妙的梦，从一件事莫名其妙的和另一件无关的事链接在一起，但在梦里又觉得很合理，我不知道我做的梦到底表达了什么，也许下一次做梦刚醒时我会把它记录下来，然后放在一个叫做 dream 的链接下，记录自己莫名其妙的梦吧。</p><p>写到这里我又开始复盘，思考自己到底是什么样的人，有着怎么样的性格和内心能做出伤害他人的事，于是我想起了高中时期我为了更加了解自己专门去看了一本书，叫做  《九型人格》，做了几道判断自己属于那种人格类型题目，最后得到的结果是我属于调停者，于是我迫不及待的去翻到调停者的章节来看看自己是不是书中所说的那样，最后发现是有几点相似，例如不懂得宣泄愤怒，想要和人和谐相处，避开所有的冲突之类的。看完这这章后我又去看了与调停者相近的怀疑论者，自己应该更偏向于怀疑论者，用怀疑的目光看待一切。记得书中有很好的一句话，但是我忘记了，等我回家后我一定会把他重新的读一读，所以我的待办事项又多了一本要读的书。</p><p>那就总结一下对自己的评价吧，我是一个自私利己的，随心所欲的，自以为是的，虚伪的，小气的，冷漠的，龌龊的，贪婪的，得寸进尺的，懦弱胆小的，缺乏安全感的，孤独的，揣测别人对自己最坏想法的，在别人还没对我做什么之前，我就开始抱着杀死对方想法的，对所有人包括自己都会隐藏内心的，靠近我就会被刺伤的，没有感情的动物？哈哈，因为我觉得没有感情就像是动物一般，我就是这种像人一样的动物，就这样吧，也许正如某人所说，我应该孤独终老，想想这样也没什么不好，之前和他们出去玩时有一个话题，有一百万我可以独自一人花一辈子，有人觉得这不可能，于是开始精打细算，来思考一年，一个月，一周，一天会花多少钱，但我要补充的还有前提是能活很久。又开始莫名其妙的转移话题了，往上滑滑我已经写了这么多无聊的东西，现在已经很晚了，明天又是全民核酸，我想我这么晚睡觉后，第二天起来继续睡觉做梦的概率会很大，这样我就可以把自己的梦记录在博客 dream 里面了，我还想晚点睡的，但我现在又累又困又饿，所以晚安吧，晚安某人，晚安 paprika。</p><img data-src="https://raw.githubusercontent.com/MrNobody233/Pohot/main/blog/2022/2022-5-10-10%3A51%3A04paprika.jpg" width="400px"><p style="color:#961d0c;text-align: center; font-size:20px; font-weight:bld;">paprika</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上一次在宿舍呆这么久的时候应该是在大一上学期，那个时候在工作室每天待的时间不是很长，一般是晚上七点左右到九点下晚自习的时间，结束后我就会回寝室，也记不得自己回去会干什么事，应该是打 CF 或者看 B 站，今天在&lt;span style=&quot;color:#ccc&quot;&gt;废宅充电器&lt;/</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>百年孤独</title>
    <link href="http://mrnobody233.github.io/2022/10/22/%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC/"/>
    <id>http://mrnobody233.github.io/2022/10/22/%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC/</id>
    <published>2022-10-22T07:44:13.000Z</published>
    <updated>2022-10-22T07:45:17.678Z</updated>
    
    <content type="html"><![CDATA[<p>过去都是假的，回忆是一条没有归途的路，以往的一切春天都无法复原，即使最狂热最坚贞的爱情，归根结底也不过是一种瞬息即逝的现实，唯有孤独永恒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;过去都是假的，回忆是一条没有归途的路，以往的一切春天都无法复原，即使最狂热最坚贞的爱情，归根结底也不过是一种瞬息即逝的现实，唯有孤独永恒。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>捞粉快乐</title>
    <link href="http://mrnobody233.github.io/2022/10/14/%E6%8D%9E%E7%B2%89%E5%BF%AB%E4%B9%90/"/>
    <id>http://mrnobody233.github.io/2022/10/14/%E6%8D%9E%E7%B2%89%E5%BF%AB%E4%B9%90/</id>
    <published>2022-10-13T16:01:43.000Z</published>
    <updated>2022-10-15T10:34:59.740Z</updated>
    
    <content type="html"><![CDATA[<p>今年国庆是我有史以来过的最长的一次，昨天下午五点多我才回学校，大概是放了 12 天假，也不能说是放假，更像是上班，在五号晚上八点左右时爷爷奶奶从店里回家路上出了车祸，对方是个外卖骑手，和我们认识，经常来店里拿餐，事故主要原因是他骑电动车逆行和超速。最严重的是我爷爷，胸骨骨裂，奶奶只是肩膀和脚痛，等我到现场的时爷爷他们已经被 120 接走了，只剩下一些叔叔婶婶在和警察谈事，还有看热闹的人，接着跟我妈妈妹妹打车去医院，看着我爷爷躺在病床上眼睛都睁不开，看到我来后还关心我是不是穿了长裤，给我整的可难受了，然后我和一个叔叔推着床去住院部，因为疫情原因，住院的地方只能留下一个家属陪同，奶奶不想耽搁大家的事情说什么也不愿意走，只能让她留下来照顾爷爷，而且因为太晚了租折叠床的阿姨已经下班，没有床给她睡，只能和我爷爷挤在一起。六号早上六点多我就起来了，把一些需要的东西打包好和我爸送到医院去，爷爷还是躺在床上不想睁开眼睛，因为喘不过气还多了一个吸氧机，他们不想耽搁店里生意催着我们赶紧回去。</p><p>本来六号该回学校的，因为爷爷的事就打算推迟回去，他们又怕耽搁我学习，催让我早点去学校，我想着我妹妹还在家可以帮帮忙，等她回学校了我再回家，当我收拾好东西后准备把电动车放到店里去坐地铁时，就发现店里就忙的要死，我妹也因为这边有疫情被老师催去学校了，看着我爸妈忙的不可开交，我把包一放就去后厨开始烫粉，当天就做了 200 多单，既然我妹都去学校了，我也没有回学校的理由了，打算等我爷爷能下床了再回学校。早上十点半去店里捞粉，一点多吃完饭回去睡午觉，四点半回来继续捞粉，七点半回家写会代码，玩手机到凌晨两点，就是我这几天的日常。说实话这样的生活也挺不错的，过的开心就行了，不考虑太多的事情。但一个人还是很无聊的，有时候我会自己在外面滑一下滑板放松一下心情，只是少了音乐而已，我的华为耳机貌似在一次去医院看我爷爷的路上掉了，虽然很心疼，但我是一个乐观主义者，我把这件事当成我爷爷出院的条件，九号的时候我爷爷已经可以走路去楼下拍片子了。十号就回家修养了，因为住院的地方实在是太吵了，他回家后睡得特别香，因为他的呼噜特别大…</p><p>我爷爷已经 70 岁了，身体还算硬朗，要换成村里其他老人真的够呛，这次在医院躺了五天，花费了 1w 多，还没包括后续复查费用。这次在店里帮忙又让我想起了 20 年在另一个面店做前台的事情，大部分是处理少送餐品，没拿筷子，催单，退单，打电话给差评人退钱，回复好评之类。相比这次粉店相比，还是更喜欢粉店，因为那些人放垃圾，头发进食物里故意退款，同行恶意差评真的让人恶心，那个店也因为一些原因关掉了，真的让人心寒，人为什么不可以将心比心，还是说不是每个人都有妈妈，也许是我的共情能力太强了，对别人的善良就是对自己的残忍。要是我以后变得冷漠无情、，现在我也能够理解了。这次学会的事情还挺多的，学会了打包外卖，烫粉，煎鸡蛋，虽然都很简单，还有一个重要的是如果发生类似的事情一定要保持冷静，打电话给 110 和 120，听婶婶和奶奶说他撞了人以后只顾着道歉，说自己不是故意的，等我奶奶打电话给家里人，他们赶到现场后才打电话给 120，就真的挺无语的，还好事情不算严重。等我有时间了再回去看看我爷爷他们吧，太累了不想写了，就酱子，886。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今年国庆是我有史以来过的最长的一次，昨天下午五点多我才回学校，大概是放了 12 天假，也不能说是放假，更像是上班，在五号晚上八点左右时爷爷奶奶从店里回家路上出了车祸，对方是个外卖骑手，和我们认识，经常来店里拿餐，事故主要原因是他骑电动车逆行和超速。最严重的是我爷爷，胸骨骨裂</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>国庆快乐</title>
    <link href="http://mrnobody233.github.io/2022/10/04/%E5%9B%BD%E5%BA%86%E5%BF%AB%E4%B9%90/"/>
    <id>http://mrnobody233.github.io/2022/10/04/%E5%9B%BD%E5%BA%86%E5%BF%AB%E4%B9%90/</id>
    <published>2022-10-04T10:43:59.000Z</published>
    <updated>2022-10-04T11:46:07.176Z</updated>
    
    <content type="html"><![CDATA[<p>一切都发生的很突然，就是今天下午睡醒后出门发现变天了😭, 知道这对我意味着什么吗！！我不能再穿着背心短裤出门，也不能穿着拖鞋出门了，陪伴了我好几个月的拖鞋就要在这几天和我说 88 了，明明睡前还是的夏天，醒来后却变成了秋天。 不过秋天这个季节我并不讨厌，因为我喜欢穿外套和卫衣，在夏天的时候我已经和背心短裤还有拖鞋他们培养很好的关系，不过是天气转换的太快我没有适应过来而已，因为我没有新的外套和卫衣😭。</p><p>最近又发生了许多好玩的事情，但不是所有事都会记录在博客里，毕竟我记忆力不是很好，只想把有趣的事情记录下来，今天是全民核酸，我实在是起不来，只能下午去做。骑着小电驴去我小区的便民核酸，风很大，仿佛提前告知我要变天了，大到什么程度呢，在排队做核酸的时候有个妹子做完了准备走，然后风就把她的裙子吹了起来，让我看到了不该看的东西，本以为这种情况只会在电影动漫中出现，但现在却真实的发生在我面前，简直不敢相信自己的眼睛，但我还是确定了她穿的白色的内裤… 我不是变态，我只是把自己看到的说了出来而已😭</p><p>昨天好像是想去找我的高中班主任玩的，主要也不是去找他玩，是想找他的狗玩，他有两条狗，一条泰迪，一条柴犬，泰迪叫夏目，柴犬好像叫阿呆，我喜欢的是夏目，前段时间梦见它死了才想着找个时间去看看它，毕竟在高中时期我和她有着美好的回忆，说实话我讨厌泰迪这个品种，却不讨厌夏目，毕竟没有人会拒绝一只叫一声就过来的修狗狗。不过我的高中班主任好像挂了，一直没回我消息，我只能晚上打个电话去骂他，这个喜新厌旧的 SB 晚上要上晚自习，又不早点和我说，还不让我陪修狗玩，虽然我有他家的钥匙，但他对象在家里。实在是难绷，只是想滑着滑板然后遛狗狗，就像 19 年我和夏目在家小区溜达一样。</p><p>国庆的前一天，也就是 9 月 30 日，我和<span style="color:#ccc">废宅充电器</span>还有<span style="color:#49b1f5">ButterFlyFish</span>中午去了 j9，因为期待很久的网站设计大赛颁奖开始了，在他们说了一堆没用的屁话过后，准备去领奖，发现情况有点不对，你妈的怎么是 U 盘啊，还以为是老师搞错了，一直在旁边等着他发完奖品，然后直接问他，为什么一等奖和三等奖一样是 U 盘，妈的，他说奖品不重要，真是密麻麻石蜡，我参加这个比赛就是为了拿奖品，还说有这么多人参加比赛，学院给的钱不够之类的，我大概算了一下，他的 U 盘是 20 元一个，13 个队伍获奖，一共 44 人，大约 880 元，妈的钱都去哪里了？关键是其他比赛在那里发奖品都是一个队伍一个奖品，还是无线键盘。我真的不知道他哪来的脸在那里发 U 盘。真的很失望，上学期他们参加的安卓比赛拿了二等奖都是 99 元的雷蛇键盘，去年参加的网页比赛是个蓝牙音箱，到我这里就是个 20 元的破 U 盘，而且人均一个。发生了这种事，真的越想越气，越想越难受，凌晨三点在找投诉渠道，结果发现没有，微信小程序的匿名投诉我是不敢相信，简直是无语，我彻底对这个学校失望了，让我对比赛方面的事情失去了兴趣，气得我把吃面的时候把奖状丢在桌子上垫着，气得我发微信朋友圈还没屏蔽这个老师，气得我晚上睡不着觉😭。</p><p>还有一些难绷的事情就不想说了，想写会儿代码，到现在 4 号了，和之前不同，没有什么国庆的味道，不过是路上多了些红旗而已，又或者是我呆的地方不对，希望这次解封不要出现疫情，不然我在里面真的会憋死，就这样吧，本来想写的更激进一些，但还是要学会控制一下自己的情绪… 他妈的凭什么啊，我的雷蛇鼠标😭</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一切都发生的很突然，就是今天下午睡醒后出门发现变天了😭, 知道这对我意味着什么吗！！我不能再穿着背心短裤出门，也不能穿着拖鞋出门了，陪伴了我好几个月的拖鞋就要在这几天和我说 88 了，明明睡前还是的夏天，醒来后却变成了秋天。 不过秋天这个季节我并不讨厌，因为我喜欢穿外套和</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>每日一张</title>
    <link href="http://mrnobody233.github.io/2022/09/21/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%BC%A0/"/>
    <id>http://mrnobody233.github.io/2022/09/21/%E6%AF%8F%E6%97%A5%E4%B8%80%E5%BC%A0/</id>
    <published>2022-09-21T14:24:35.000Z</published>
    <updated>2022-09-22T03:48:56.415Z</updated>
    
    <content type="html"><![CDATA[<h1 style="text-align:center">想听就听</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&amp;id=2068310149&amp;auto=1&amp;height=66"></iframe><details class="info"><summary>歌词</summary><div><p><span class="label info">我想和你一起去海边</span></p><p>蓝的天 白的云<br>有微风拂你的脸庞<br>海风吹的味道<br>就像夏天的拥抱<br>不知道怎么会想起你<br>悄悄心跳不已<br>你轻轻哼起<br>这曲旋律<br>写满了思绪<br>不管在哪里<br>有我 陪着你<br>蓝的天 白的云<br>有微风拂你的脸庞<br>海风吹的味道<br>就像夏天的拥抱<br>不知道怎么会想起你<br>悄悄心跳不已<br>你轻轻哼起<br>这曲旋律<br>写满了思绪<br>不管在哪里<br>有我 陪着你<br>你轻轻哼起<br>这曲旋律<br>写满了思绪<br>不管在哪里<br>有我 陪着你～</p></div></details><h1 id="每日一张"><a class="markdownIt-Anchor" href="#每日一张">#</a> 每日一张</h1><p>大部分熟人都知道我每天都会拍一张照片上传到 QQ 空间，但是最近 QQ 空间上传照片没有原图选项了，这意味着我继续存照片到空间的话，以后把照片剪成视频就不再是原来的清晰度，其实也不算什么，只是放大后可能看不清我的黑头和痘痘还有鼻毛罢了，但我还是决定把相册中所有的照片存进自己的电脑里，顺便按照年月来分文件，也给每张照片命名日期。这样做可以节省未来我该做的事，虽然目前只完成了现在到 22 年 7 月份的照片，相册的第一张照片是 19 年 3 月份的，虽然隔了这么长时间，到目前为止实际上也就 474 张照片，原因是我隔两三天才拍一张，有时候一个月才拍一张，其中的原因很多，包括我忘了拍，有人在很尴尬之类的，毕竟所有照片都是原相机拍，各种细节都能看见，有人看着会很尴尬。但我还是和很多人拍过照片并放进相册里了，其实我还是很想和各种人拍照的，不过我比较害羞，担心他们会不会在意用原相机拍照，拍丑了我会重新拍过，会不会很麻烦之类的。</p><h1 id="beat测试机"><a class="markdownIt-Anchor" href="#beat测试机">#</a> beat 测试机</h1><p>最近有很多机会可以和工作室的小伙伴拍照，因为淼哥给我们弄了几台荣耀 beta 测试样机，主要是用来测试手机使用过程是否有 bug 之类的，出现问题需要提单，提单可以加分，分越多福利越好，测试结束后样机可以白嫖不用还回去，购买样机打折，送荣耀优惠劵之类的。到现在我已经使用这台样机 9 天了，开始并不准备把它当成主力机，只单纯当游戏机而已，不过我的机子比果果超甜和胃疼患者的机子好很多，（因为签了合同我不能说这是什么芯片，虽然这个博客也没人看）我下载了很多的游戏，王者荣耀，和平精英，QQ 飞车，英雄联盟什么的，虽然玩的最多的是 QQ 飞车，因为我实在没有玩游戏的欲望了，王者荣耀和英雄联盟下到现在还没有登过，QQ 飞车玩的原因是节奏快，玩一次也就 2，3 分钟，飞车手游刚出的时候我就开始玩了，大概是我高二的时候，现在回想才发现已经过去这么久了，因为我还觉得这是个新游。</p><p>前段时间在玩飞车的时候有个陌生人私信问我是谁，问我是不是也是同一个高中的，因为我的战队就是高中名，我先问出了他的名字，他在问我的时候我就下线了，好贱啊哈哈哈哈，太吊人胃口了，我知道他是谁，但我和他之间没太多的关系，又或者说我和高中也没太多的关系，所以没有告诉他我的名字。测试了这么多天手机我已经完全习惯了它，我的 p40pro 只是带在身上怕这个样机出 bug 不能付钱罢了，但用到现在只出现了一次死机而已，我希望它能多出点 bug，这样我就可以把这台机子便宜点拿下来给我奶奶用了，我想给她打电话说一声来着，不过现在已经很晚了，希望我明天记得打给她。</p><h1 id="奖学金"><a class="markdownIt-Anchor" href="#奖学金">#</a> 奖学金</h1><p>班级开始弄励志奖学金了，我从很早就开始打这个的主意了，想用这些钱买一台拯救者笔记本，不过也是从一开始我也抱着这个东西可有可无的态度，班级综测我是第三名，在<span style="color:#ff8ea2">果果超甜</span>和<span style="color:#798db0">胃痛患者</span>的下面，成绩就比较差了，是班级的 21 名，因为我懒得多抄，不挂科就是胜利，因为这个原因导致我今年的奖学金也拿不了了，成绩要在班级的前 30%，这我就很不爽了，拿不拿奖金我倒无所谓，我的班长没早点告诉我成绩不合格，搞得我材料弄了一下午都准备好了，抄申请书手都快抄断了，不过也无所谓了，反正这个东西本来就不属于我。</p><h1 id="专升本"><a class="markdownIt-Anchor" href="#专升本">#</a> 专升本</h1><p><span style="color:#ff8ea2">果果超甜</span>和<span style="color:#798db0">胃痛患者</span>已经开始复习专升本了，从早八点半就去图书馆，我实在是起不来，不能和他们一起学习，我的学习方式也和他们不一样，又或者我现在不想复习，只是最近开始背背单词而已，我太懒了，今天也没有背，只是把之前背过的单词重新拼写了一边，正确率还是特别高的，比较一天也就背个 10 个左右，所以记得特别熟悉。专升本考试不出意外的话应该是 23 年 4 月左右，差不多 200 来天吧，我打算寒假正式开始复习，也许寒假要过年，或者和朋友出去玩，但为了以后还能出去玩，我必须得好好弄下，能上本校就足够了，所以我还是很狂的，专升本的同时还不想放下前端知识，但愿我不会翻车。</p><h1 id="nechat"><a class="markdownIt-Anchor" href="#nechat">#</a> neChat</h1><p>今天没背单词的原因是 <span style="color:#ccc">废宅充电器</span>让我完成他的项目 nechat 一个二次元聊天网页，由于上个学期我和他已经搞了一丢丢了，现在只是过了太久我忘了，开始重写而已，也算是走之前留下的遗产吧，我写的很规范，用上了之前没有用过的东西，比旧的代码规范简洁了很多很多，看来多做项目还是有好处的，今天测试了注册和登录，没有什么问题，等<span style="color:#ccc">废宅充电器</span>把后端写完了，我再继续搞其他的，明天继续搞搞看看自己能不能完成搜索模块和搜索历史记录的东东，很期待这个项目完成以后的样子。还有一些想说的就算了吧，这篇博客不知道取什么名字，其实只是想记录一下最近发生的事情而已，但是为了名字我特地写了一大段话，不然标题就显得莫名其妙，嘿嘿，明早还要体测，就酱紫，掰～。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 style=&quot;text-align:center&quot;&gt;想听就听&lt;/h1&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>睡前要不要喝水捏</title>
    <link href="http://mrnobody233.github.io/2022/09/10/%E7%9D%A1%E5%89%8D%E8%A6%81%E4%B8%8D%E8%A6%81%E5%96%9D%E6%B0%B4%E6%8D%8F/"/>
    <id>http://mrnobody233.github.io/2022/09/10/%E7%9D%A1%E5%89%8D%E8%A6%81%E4%B8%8D%E8%A6%81%E5%96%9D%E6%B0%B4%E6%8D%8F/</id>
    <published>2022-09-10T04:08:22.000Z</published>
    <updated>2022-09-10T05:12:09.411Z</updated>
    
    <content type="html"><![CDATA[<p>开学已经有一段时间了，又可以开始白嫖学校的开水咯，在工作室外面有个自动饮水机，可以免费接热水，加上淼哥给我们的小型饮水机实现了真正的开水自由，而且还是双重过滤，从大饮水机过滤到小饮水机，喝的还是比较放心滴。最近喝水次数特别多，一整天能喝好几杯水，有时候还是越喝越渴的状态，有可能是开了空调比较吸水吧，当然上厕所的次数也特别多，不知道是我的膀胱小还是怎么滴，几乎喝完水过十几分钟就有上厕所的感觉，如果是其他时间还好，但是在晚上睡觉前简直是要命，睡个半小时就想上厕所，不全上完就睡不着觉，想起来前几天没带水杯回寝室，然后渴了一晚上，实在是渴的不行了熬到凌晨四点多去一楼自动售货机买饮料喝，有了那次经历我基本每天都带水回寝，虽然今天没带，因为我买了饮料，但我严重低估了自己喝水的能力，因为我刚刚已经把它喝的差不多了，只留了一口怕半夜又渴醒，想了一下应该还是空调的原因，宿舍开空调实在是太费电了，而且我大部分时间都呆在工作室，几乎不用宿舍的电，但我还是要 AA 电费，所以我处于一种血亏的状态，特别期待秋天和冬天的，这样开空调的次数就会少许多，我交电费的频率也会变少啦。</p><p>我们寝室从来都不关门，不管白天还是晚上，昨天凌晨的时候居然有人来我们寝室上厕所，给我整无语了，上就上吧，还 tm 开灯，走了一个后又来了一个上，虽然他没开灯，但是他是来拉 💩 的… 吸取昨天的教训，今天我 tm 一定要把门给关了。室友和他们关系还挺好，我又不好说，毕竟他们是一个班，只有我是其他的班的，不过我还是特别幸运能遇见他们，在最最最开始，开始到没进入这个学校之前，选寝室的时候，我就和他们约好选同一个寝室，但是有一些意外，我选的太快了，导致我和他们分开，虽然之前的室友对我也不错，但是他们三个都吸烟，他们考虑到我，吸烟的时候都会到阳台去吸，这个我还是特别意外的，因为有一个腿上纹了二郎神，穿豆豆鞋，一看就是精神小伙的室友，开始我以为他很不好相处，结果他对我还挺不错的。。后面也是很巧的，现在寝室的有一个抽烟，其他三个不抽，正好又是和以前寝室的同班，就和我换寝室了，也没有和宿管说，一直住到了现在，他们的作息特别规律，12 点之前都会关灯上床干自己的事，不会发出什么声音，除了有一个打呼噜特别响的… 但这个是不可控的，所以我们也没怪他，只是偶尔在他面前吐槽一下。即使是有这么好的室友，不过我的睡眠时间好像还是很少，每天基本都是 1：00 睡 7：45 醒，但最近我精神特别好，以前上课都会睡觉，现在没有想睡觉的欲望，可能是睡眠质量高了一些，果然我还是得和人一起睡，这样就能配合对方的睡眠时间，但是像<span style="color:#ccc;">废宅充电器</span>凌晨 4 点睡，下午 3，4 点醒的阴间人除外！</p><p>哎，明天早上六点多就有志愿者开始叫我们做核酸，特别佩服他们能起这么早，实在是太辛苦了。其他地方上课的人做完核酸可以上网课，妈的我们在 S5 上实训课的就要去线下课，简直是坐牢，六点多起来排队 20 分钟做核酸，然后上去睡一会觉又要去上课，我真要崩溃了，精神肉体双重折磨，之前做核酸我都会说一声谢谢，现在已经麻木的都说不出话了，还不如在家隔离上网课算了，气屎我了。上两周实训课又学不到什么，全是后端的的东西，讲一半又开始给我们画大饼 讲故事，真给我整不会了，还好<span style="color:#49b1f5">ButterFlyFish</span>参加《工业互联网安全大赛》请了一天的假让我摆烂一天，这个比赛我都不知道是做什么的，只是叫我凑个人头，和<span style="color:#ccc;">废宅充电器</span>在边上帮她搜一下题，然后<span style="color:#ccc;">废宅充电器</span>在叫他的朋友洋洋来代打，做了几题后就结束了，不过这一切都是值得的，和他们待在一起可比上课好玩多了。</p><p>前两天 S 和胖达给我发了一个拼夕夕口令，让我砍他们一刀，胖达成功了，薅了拼夕夕 200 元，S 放弃了，我抱着试试的心态去玩一玩，结果一发不可收拾，从差 1 块钱，到差一毛钱，再到一分钱，接着是 20 个金币换 1 毛钱，又是 20 个钻石换一个金币。说实话我的熟人真的太少了，我发给了<span style="color:#49b1f5">ButterFlyFish</span>，<span style="color:#ff8ea2">果果超甜</span>和<span style="color:#798db0">胃痛患者</span>，斌哥，一个关系较好的室友，现在的班长，亲妹，堂妹，然后好像就没了，S 和 X 也帮我邀了，大部分都是 S 邀的人多，妈的她还发给我其他的初中同学，居然还帮了，但是是用我的名义，简直是要尬死我，好像是快 20 多个人了，到最后还是没有薅到，到最后一个钻石就可以薅 100 元的时候，它都不装了，抽了三次都只是给我一分钱，我真的想杀了拼夕夕的 🐴 ，最开始我说 S 不够坚持，结果在没开始之前放弃好像也是一个不错的选择，从此我学会了，那就是不要去占便宜，浪费时间精力，还有就是，拼夕夕没有🐴。中秋节快乐🌔, 除了拼夕夕，掰掰。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开学已经有一段时间了，又可以开始白嫖学校的开水咯，在工作室外面有个自动饮水机，可以免费接热水，加上淼哥给我们的小型饮水机实现了真正的开水自由，而且还是双重过滤，从大饮水机过滤到小饮水机，喝的还是比较放心滴。最近喝水次数特别多，一整天能喝好几杯水，有时候还是越喝越渴的状态，有</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>开学前</title>
    <link href="http://mrnobody233.github.io/2022/08/29/%E5%BC%80%E5%AD%A6%E5%89%8D/"/>
    <id>http://mrnobody233.github.io/2022/08/29/%E5%BC%80%E5%AD%A6%E5%89%8D/</id>
    <published>2022-08-28T16:02:28.000Z</published>
    <updated>2022-08-29T08:05:33.083Z</updated>
    
    <content type="html"><![CDATA[<p>烦内，再过几天该开学了，回想整个暑假，好像都没有干什么就结束了，虽然这次假期休息的时间是最长的，但我还是觉得时间过得太快辣。有没有一种可能，就是和我凌晨 3 点睡，中午 12 点起有关系。明明想好了开学前十天把生物钟调整好，但我现在居然在等我的羊肉串，而且我还刚吃了一小碗泡面，不知道为什么最近胃口特别好… 羊肉串好了，吃完再写，º﹃º</p><p>吃饱了，开始困起来了，每次吃饱的时候就特别特别特别困，好像在哪里听说过是我脑子里的细胞去我肚子里帮助消化之类的说法，不知道是不是这个原因。困是困了，但是不想睡觉，虽然想睡也睡不着，最近睡眠质量又开始下降了，不想睡占一半，想睡睡不着又占一半，我想了一下，也许有人和我一张床睡的话会比较好些，因为我会配合对方的睡眠习惯和时间，或者是有可能怕吵醒对方。哈哈，不过近几年还是别想这些了。睡眠质量下降了，做梦的频率也多了很多，也发现了做梦需要的条件，大概就是需要睡觉中途醒一次，接着继续睡，环境需要在比较冷的地方，接着就会在第二次睡眠中进入梦境了，我很喜欢做梦，因为它没办法预测，不知道自己会梦见什么，但我最近梦到的都是可能会发生的事情，比如我和谁去吃夜市，和谁滑滑板，和谁去逛街，梦见因为疫情好久没见的外婆表妹之类的。最近梦到的是去好朋友家喝茶，并且她爸妈也在… 很多次做的梦过几分钟就忘了，也许有一天我会新建一个  <code>梦</code>  的分类来记录到博客里，因为梦实在是太有意思了，但好像能写的不算多，因为我梦到的尺度好像会比较大哈哈哈哈.</p><p>妈的说起喝茶，上次从湖南回南昌都到 X 家楼下了还不让我去她家喝茶，只让 S 去，妈的太过分了，我只是想和叔叔阿姨聊个天，喝个茶，撸下她家的猫，尝一尝她调的酒，如果能蹭就蹭一下饭而已。我也问过 S 可不可以去她家喝茶，她好像是说去了怕她爸妈认为我和她有戏之类的来拒绝我，这样拒绝我还是能接受的，但我要是有机会我还是会去她家喝茶的！我只是想嫖点东西而已，真的 QWQ，我还问过其他的人，一个是怕父母打断腿，一个说不想理我，还有一个直接让我滚，呜呜，如果是<span style="color:#49b1f5">ButterFlyFish</span>的话应该是有戏的，但是家离得太远了，等有机会她和她妈妈视频我可以露个脸打个招呼，逗一下家长玩。</p><p>本以为熬夜到中午，不吃早饭我体重又要下降，但是最近去家里称了一下体重，发现终于到了我一直想要的  <code>100斤</code>  ，可能是我最近零食吃的比较多，买了一些自己想吃的薯片，巧克力饼干，还有冰糖杨梅之类的，特别是冰糖杨梅，真巨好吃，我特别喜欢吃糖，特别是软糖，就是毛毛虫软糖，qq 糖，或者可乐软糖之类的，虽然我很喜欢吃，但吃的次数特别少，少到几乎都是别人买了棒棒糖给我吃，或者我去商店才买一次，频率大概是两三个月吃一次的程度。这么少吃糖的主要原因是害怕长痘痘，但通过最近吃零食来看，并没有那么严重，脸上除了黑头几乎没有可以挤的痘痘了，有可能是痘痘都跑到背上去了。。说的好像也没错，自从我背上有痘痘后脸上就不长了，不知道这个对我来说是好事还是坏事，应该算是好事吧，哈哈哈。</p><p>说起零食，我是在奶奶家附近的零食店买的，到现在为止一共去了三次，第一次是去长沙之前路上吃的，由于和零食店的姐姐没沟通好，导致我充了钱，所以第一次只花了一半，第二次是过了一段时间了，我想起要把余额清零，所以打开计算器每拿一个零食就算一次，然后完美的清零了，那个姐姐还不相信，看了一眼订单余额，晚上回去她通过订单上的电话发短信要加我微信，我以为是朋友捣乱，所以刁难了她许久，还问她是不是间谍之类的… 直到她说她是零食店的姐姐后。。。直接把我尬住了，虽然我是想要个大一点的姐姐，不过貌似她特别被动，也不会找话题，我也太懒了，就没和她聊了，第三次是我滑滑板饿了，打算吃羊肉串，但是又有点小贵，所以干脆去零食店买泡面和零食得了，所以就有了今天我吃了泡面还是想吃羊肉串的场景… 考虑到我会吃零食增重，也许会在去学校的前一天买一些 (拿得下的话)</p><p>前段时间经常去网吧和<span style="color:#ccc">充电器</span>玩 csgo，说是经常，实际上只去了两次，去不去玩其实都没区别，只是害怕我玩枪的技术下降了，哈哈哈，还有一个原因是上完网后可以滑滑板回家，从网吧到家，有一段特别长的下坡，蹬都不用蹬，滑的过程特别舒服，虽然下坡完后又是一段特别长的上坡… 但还是值得的，想了一下我应该不会把滑板带去学校了，学校的人实在是太多了，路也不算好，能滑的地方太少了，车还巨多，明明在学校里面，仿佛和在外面没什么区别，最主要的是工作室有电动滑板车可以代步… 但是韬哥走了，要是车坏了真不知道找谁修，虽然这个车很耐操，从杨老师继承到我，直到现在还是好好的。还有一个原因就是我开学只要上两个月的课就可以滚蛋了，让我来算一算两个月，9 个星期，60 天，1440 小时，86400 分钟，5184000 秒，哈哈哈哈！也就是说再过 5184000 秒我就可以跑路了，这样一想我就开始期待开学了，就酱紫，掰掰。最后来听首歌～</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=3&amp;id=2065979054&amp;auto=1&amp;height=66"></iframe><details class="danger"><summary>歌词</summary><div><p><span class="label danger">fly me to the moon</span></p><p>Fly me to the moon, and let me play among the stars.<br> 带我飞向月球 并让我在群星之间嬉戏<br> Let me see what spring is like on Jupiter and Mars.<br> 让我看看在木星和火星上的春天是怎样的<br> In other words hold my hand!<br> 换句话说，请握住我的手<br> In other words darling kiss me!<br> 换句话说，亲爱的，吻我<br> Fill my heart with song,and let me sing forever more.<br> 让我的心灵充满歌声并让我永远歌唱<br> You are all I long for all I worship and adore.<br> 你是我所有的渴望 我所敬仰与热爱的一切<br> In other words please be true!<br> 换句话说，请真心对我<br> In other words I love you!<br> 换句话说，我爱你</p></div></details>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;烦内，再过几天该开学了，回想整个暑假，好像都没有干什么就结束了，虽然这次假期休息的时间是最长的，但我还是觉得时间过得太快辣。有没有一种可能，就是和我凌晨 3 点睡，中午 12 点起有关系。明明想好了开学前十天把生物钟调整好，但我现在居然在等我的羊肉串，而且我还刚吃了一小碗泡</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序</title>
    <link href="http://mrnobody233.github.io/2022/08/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://mrnobody233.github.io/2022/08/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</id>
    <published>2022-08-21T10:49:45.000Z</published>
    <updated>2022-10-12T13:29:31.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wxml-和-html-的区别"><a class="markdownIt-Anchor" href="#wxml-和-html-的区别">#</a> WXML 和 HTMl 的区别</h1><ol><li><p>标签名称不同</p><ul><li>HTML ( div span img a )</li><li>WXML ( view text image navigator )</li></ul></li><li><p>属性节点不同</p><ul><li><code>&lt;a href="#"&gt; 超链接 &lt;/a&gt;</code></li><li><code>&lt;navigator url="/pages/index/index"&gt; 主页 &lt;/navigator&gt;</code></li></ul></li><li><p>提供了类似 Vue 中的模板语法</p><ul><li>数据绑定</li><li>列表渲染</li><li>条件渲染</li></ul></li></ol><hr><h1 id="wxss"><a class="markdownIt-Anchor" href="#wxss">#</a> WXSS</h1><p>一套样式语言，类似 CSS</p><h2 id="区别"><a class="markdownIt-Anchor" href="#区别">#</a> 区别</h2><ol><li>新增 rpx 尺寸单位</li></ol><ul><li>WXSS 在底部支持新的尺寸单位 rpx，在不同大小的屏幕上小程序会自动进行换算</li></ul><ol start="2"><li>提供了全局的样式和局部样式</li></ol><ul><li>项目根目录中的  <code>app.wxss</code>  会作用于所有小程序页面</li><li>局部页面 .wxss 样式仅对当前页面生效</li></ul><ol start="3"><li>WXSS 仅支持部分 CSS 选择器</li></ol><ul><li>.class 和 #id</li><li>element</li><li>并集选择器，后代选择器</li><li>::after 和 ::before 等伪类选择器</li></ul><ol start="4"><li>样式导入</li></ol><ul><li><code>@import "/common/common.wxss";</code></li></ul><ol start="5"><li>全局样式<br>在 app.wxss 中的样式为全局样式，作用于每一个页面</li></ol><hr><h1 id="组件"><a class="markdownIt-Anchor" href="#组件">#</a> 组件</h1><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vbWluaXByb2dyYW0vZGV2L2NvbXBvbmVudC9jb3Zlci1pbWFnZS5odG1s">官方文档</span><br>小程序中的组件是由宿主环境提供的，官方把小程序的组件分为了好几大类，分别是：</p><ol><li>视图容器</li><li>基础内容</li><li>表单组件</li><li>导航组件</li><li>媒体组件</li><li>map 地图组件</li><li>canvas 画布组件</li><li>开放能力</li><li>原生组件说明</li><li>无障碍访问</li><li>导航栏</li><li>页面属性配置节点</li></ol><h2 class="rainbow" id="常见的组件"><a class="markdownIt-Anchor" href="#常见的组件">#</a> 常见的组件</h2><ul><li><p>view</p><ul><li>普通视图区域</li><li>类似 HTML 中的 div, 是一个块级元素</li><li>常用来实现页面的布局效果</li></ul></li><li><p>scroll-view</p><ul><li>可滚动的视图区域</li><li>常用来实现滚动列表效果</li></ul></li><li><p>swiper 和 swiper-item</p><ul><li>轮播图</li></ul></li><li><p>button</p><ul><li>按钮组件 可以通过  <code>open-type</code>  属性调用微信提供的各种功能 (客服 转发 获取用户限权 获取用户信息等)</li></ul></li></ul><hr><h1 id="wxml-模板语法"><a class="markdownIt-Anchor" href="#wxml-模板语法">#</a> WXML 模板语法</h1><h2 id="数据绑定"><a class="markdownIt-Anchor" href="#数据绑定">#</a> 数据绑定</h2><ol><li>在 data 中定义数据</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  </pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 页面初始数据</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"雪泥马"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"雪泥马"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">"男"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token string">"https://mrnobody233.gitee.io/images/avatar.jpg"</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        </pre></td></tr><tr><td data-num="12"></td><td><pre>        </pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="2"><li>在 WXML 中使用数据</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>text<span class="token operator">&gt;</span> <span class="token punctuation">{</span> msg <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>text<span class="token operator">&gt;</span> <span class="token punctuation">{</span> list<span class="token punctuation">.</span>name <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 动态绑定属性 与 vue 不同</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span>image src<span class="token operator">=</span><span class="token string">"{list.img}"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>image<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h2 id="事件绑定"><a class="markdownIt-Anchor" href="#事件绑定">#</a> 事件绑定</h2><p><strong>小程序中的常用事件</strong></p><ol><li>bindtap 手指触摸后马上离开，类似 HTML 中的 click</li></ol><ul><li>为按钮绑定 tap 触摸事件<br> <code>&lt;button bindtap="btnClick"&gt;点我&lt;/button&gt;</code></li><li>在 js 文件中定义对应的事件处理函数</li></ul><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">"雪泥马"</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token comment">// 事件参数通过形参 event （简写 e） 来接收</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </pre></td></tr><tr><td data-num="7"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">*</span><span class="token comment">// 通过调用 `this.setData (dataObject)` 方法可以给页面中的数据重新赋值</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>          <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"布雪蜡"</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span>    </pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ul><li><p>事件传参<br>小程序<span style="color:red">不能在绑定事件的同时为事件处理函数传递参数</span>，可以为组件提供 <code>data-name</code>  自定义属性传参，其中 name 代表的是参数的名字</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>button bindtap<span class="token operator">=</span><span class="token string">"btnClick"</span> data<span class="token operator">-</span>step<span class="token operator">=</span><span class="token string">"{2}"</span><span class="token operator">&gt;</span>事件传参<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><p>通过 <code>event.target.dataset.参数名</code>  来获得具体参数值</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">btnClick</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>          <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"布雪蜡"</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token comment">// 沙比吧。。。</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure></li></ul><ol start="2"><li>bindinput 文本框的输入事件</li></ol><ul><li>为文本框绑定事件<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>input bindinput<span class="token operator">=</span><span class="token string">"iptHandler"</span>  type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">/</span><span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure></li><li>在 js 页面中定义事件处理函数<figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">iptHandler</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token comment">//e.detail.value 是变化后文本框最新的值</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure></li></ul><ol><li>bindchange 状态改变时触发</li></ol><hr><p>当事件回调触发的时候，会收到一个事件对象 event</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>事件类型</td></tr><tr><td>timeStamp</td><td>integer</td><td>页面打开到触发事件所经过的毫秒数</td></tr><tr><td><strong>target</strong></td><td><strong>Object</strong></td><td><strong>触发事件的组件的一些属性值集合</strong></td></tr><tr><td>currentTarget</td><td>Object</td><td>当前组件的一些属性值集合</td></tr><tr><td><strong>detail</strong></td><td><strong>Object</strong></td><td><strong>额外的信息</strong></td></tr><tr><td>touches</td><td>Array</td><td>触摸事件，当前停留在屏幕中的触摸点信息的组件</td></tr><tr><td>changedTouches</td><td>Array</td><td>触摸事件，当前变化的触摸点属性的数组</td></tr></tbody></table><h2 id="条件渲染"><a class="markdownIt-Anchor" href="#条件渲染">#</a> 条件渲染</h2><ol><li>在小程序中，使用  <code>wx:if="{ isShow }"</code>   <code>wx:else</code>   <code>wx:elif</code>  来判断是否需要渲染该代码块</li></ol><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{isShow}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>else</span><span class="token punctuation">&gt;</span></span>{isShow}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShow<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你干嘛~哎哟<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token literal-property property">isShow</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token function">isShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">isShow</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>isShow</pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><ol start="2"><li>结合 <code>&lt;blok&gt;</code>  使用 wx:if</li></ol><p>如果想要 <strong>一次性控制多个组件的展示和隐藏</strong> 可以使用一个 <code>&lt;block&gt;&lt;/block&gt;</code>  将多个组件包装起来。并在标签上使用 wx:if 控制属性，<block> 不是一个组件，<strong>不会在页面中做任何渲染</strong></block></p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span> <span class="token attr-name"><span class="token namespace">wx:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{ isShow }<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>雪泥马<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>布雪蜡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><ol start="3"><li>hidden</li></ol><p>懒得说了 和 vue 中的条件渲染一样，一个是直接移除元素，一个是切换 display:none/block 样式</p><h2 id="列表渲染"><a class="markdownIt-Anchor" href="#列表渲染">#</a> 列表渲染</h2><ol><li>wx:for 和 v-for 一样，循环渲染重复的组件结构，语法稍微有些不同</li></ol><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{phoneList}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>索引是：{index}, item项是：{item}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><ol start="2"><li>wx:key 不多说了</li></ol><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name"><span class="token namespace">wx:</span>for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{phoneList}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wv:</span>key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>索引是：{index}, item项是：{item}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><hr><h1 id="全局配置"><a class="markdownIt-Anchor" href="#全局配置">#</a> 全局配置</h1><h2 id="常用配置项目"><a class="markdownIt-Anchor" href="#常用配置项目">#</a> 常用配置项目</h2><p>小程序根目录下的 <code>app.json</code>  文件是小程序的全局配置文件，下面是常用的几个配置文件</p><ol><li>pages</li></ol><ul><li>记录当前小程序所有页面的存放路径</li></ul><ol start="2"><li><strong>window</strong></li></ol><ul><li>全局设置小程序窗口的外观</li></ul><ol start="3"><li><strong>tabBar</strong></li></ol><ul><li>设置小程序底部的 tabBar 效果</li></ul><ol start="4"><li>style</li></ol><ul><li>是否启用新版的组件样式</li></ul><h2 id="window节点常用的配置项"><a class="markdownIt-Anchor" href="#window节点常用的配置项">#</a> window 节点常用的配置项</h2><table><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>navigationBarTitleText</td><td>String</td><td>字符串</td><td>导航栏标题文字</td></tr><tr><td>navigationBarBackgroundColor</td><td>HexColor</td><td>#000</td><td>导航栏背景颜色</td></tr><tr><td>navigationBarTextStyle</td><td>String</td><td>white</td><td>导航栏标题颜色，只支持 white 和 black…</td></tr><tr><td>backgroundColor</td><td>HexColor</td><td>#fff</td><td>窗口背景颜色</td></tr><tr><td>backgroundTextStyle</td><td>String</td><td>dark</td><td>下拉 loading 的样式 仅支持 dark /light</td></tr><tr><td>enablePullDownRefresh</td><td>Bollean</td><td>false</td><td>是否全局开启下拉刷新</td></tr><tr><td>onReachBottomDistance</td><td>Number</td><td>50</td><td>页面上拉触底事件触发时距页面底部距离 单位为 px</td></tr></tbody></table><h2 id="tabbar"><a class="markdownIt-Anchor" href="#tabbar">#</a> tabBar</h2><p>用于实现多页面的快速切换，小程序一般分为 底部和顶部，<strong>注意：</strong> tabBar 中只能配置<strong>最少 2 个</strong>，<strong>最多 5 个</strong> tab 标签，当渲染<strong>顶部 tabBar</strong> 时，<strong>不显示 icon</strong>，只显示文本</p><h3 id="tabbar的6个组成部分"><a class="markdownIt-Anchor" href="#tabbar的6个组成部分">#</a> tabBar 的 6 个组成部分</h3><ol><li>backgroundColor: 背景色</li><li>selectedIconPath: 选中时的图片路径</li><li>borderStyle：tabBar 的边框颜色</li><li>iconPath：未选中的图片路径</li><li>selectedColor：tabBar 上文字选中时的颜色</li><li>color：未选中时的文字颜色</li></ol><h3 id="tabbar节点配置项"><a class="markdownIt-Anchor" href="#tabbar节点配置项">#</a> tabBar 节点配置项</h3><figure class="highlight json"><figcaption data-lang="JSON"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token property">"tabBar"</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token property">"backgroundColor"</span><span class="token operator">:</span> <span class="token string">"#ccc"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token property">"color"</span><span class="token operator">:</span> <span class="token string">"#fff"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token property">"selectedColor"</span><span class="token operator">:</span> <span class="token string">"#000"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token property">"list"</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                <span class="token property">"pagePath"</span><span class="token operator">:</span> <span class="token string">"pages/index/index"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>                <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"首页"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                <span class="token property">"selectedIconPath"</span><span class="token operator">:</span> <span class="token string">"./imagses/indexActive.png"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                <span class="token property">"iconPath"</span><span class="token operator">:</span> <span class="token string">"./imagses/index.png"</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="13"></td><td><pre>                <span class="token property">"pagePath"</span><span class="token operator">:</span> <span class="token string">"pages/demo/demo"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"演示"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token property">"selectedIconPath"</span><span class="token operator">:</span> <span class="token string">"./imagses/msgActive.png"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                <span class="token property">"iconPath"</span><span class="token operator">:</span> <span class="token string">"./imagses/msg.png"</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                <span class="token property">"pagePath"</span><span class="token operator">:</span> <span class="token string">"pages/call/call"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"电话"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                <span class="token property">"selectedIconPath"</span><span class="token operator">:</span> <span class="token string">"./imagses/callActive.png"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token property">"iconPath"</span><span class="token operator">:</span> <span class="token string">"./imagses/call.png"</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><hr><h1 id="网络数据请求"><a class="markdownIt-Anchor" href="#网络数据请求">#</a> 网络数据请求</h1><h2 id="限制"><a class="markdownIt-Anchor" href="#限制">#</a> 限制</h2><p>出于安全方面考虑，小程序官方对<strong>数据接口的请求</strong>做成了如下两个限制</p><ol><li>只能请求 HTTPS 类型的接口<ul><li><strong>登录小程序管理后台</strong> -&gt; <strong>开发</strong> -&gt; <strong>开发管理</strong> -&gt;<strong> 开发设置</strong> -&gt; <strong>服务器域名</strong> -&gt; <strong>修改 request 合法域名</strong></li></ul></li><li>必须将接口的域名添加到信任列表中</li></ol><h2 id="发起请求"><a class="markdownIt-Anchor" href="#发起请求">#</a> 发起请求</h2><p>调用小程序提供的  <code>wx.request()</code>  方法，可以发起 GET 数据请求</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://www.escook.cn/api/get'</span><span class="token punctuation">,</span> <span class="token comment">// 地址</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span>   <span class="token comment">// 方法</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>          <span class="token comment">// 传送的数据 </span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// 返回的结果</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><hr><h1 id="页面导航"><a class="markdownIt-Anchor" href="#页面导航">#</a> 页面导航</h1><p>指页面之间的相互跳转，在小程序中实现页面导航的两种方式</p><ol><li>声明式导航</li></ol><ul><li>在页面中声明一个 <code>&lt;navigator&gt;</code>  导航组件</li><li>通过点击 <code>&lt;navigator&gt;</code>  组件实现页面跳转</li></ul><ol start="2"><li>编程式导航</li></ol><ul><li>调用小程序提供的导航 API，实现页面的跳转</li></ul><h2 id="声明式导航"><a class="markdownIt-Anchor" href="#声明式导航">#</a> 声明式导航</h2><h3 id="导航到-tabbar-页面"><a class="markdownIt-Anchor" href="#导航到-tabbar-页面">#</a> 导航到 tabBar 页面</h3><p><strong>tabBar</strong> 页面指的是被配置为 tabBar 的页面<br>在使用 <code>&lt;navigator&gt;</code>  组件跳转到指定的 tabBar 页面时，需要指定<strong> url</strong> 属性和<strong> open-type</strong> 属性。</p><ul><li>url 表示要跳转的页面的地址 必须以 / 开头</li><li>open-type 表示跳转的方式 如果是 tabBar 页面 必须为<strong> switchTab</strong></li></ul><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/pages/index/index<span class="token punctuation">"</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>switchTab<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>跳转首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><h3 id="跳转到非-tabbar页面"><a class="markdownIt-Anchor" href="#跳转到非-tabbar页面">#</a> 跳转到非 tabBar 页面</h3><p>意思是没有被配置 tabBar 的页面</p><p>只需要将属性 <strong>open-type</strong> 设置为 <strong>navigate</strong> 即可</p><p>实际上不加也行，open-type 的默认值就是 navigate</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/pages/info/info<span class="token punctuation">"</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navigate<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>跳转info页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><h3 id="后退导航"><a class="markdownIt-Anchor" href="#后退导航">#</a> 后退导航</h3><p>如果要后退到上一页面或多级页面，则需要指定 open-type 属性 和 delta 属性</p><ul><li>open-type 的值必须是 <strong>navigateBack</strong> 表示进行后退导航</li><li>delta 的值必须是数字，表示后退的层级</li></ul><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navigateBack<span class="token punctuation">"</span></span> <span class="token attr-name">delta</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>返回上一级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><p>也可以省略 delta 属性 ，默认值就是 1</p><h2 id="编程式导航"><a class="markdownIt-Anchor" href="#编程式导航">#</a> 编程式导航</h2><h3 id="跳转到-tabbar-页面"><a class="markdownIt-Anchor" href="#跳转到-tabbar-页面">#</a> 跳转到 tabBar 页面</h3><p>通过  <code>wx.switchTab(Object Object)</code>  方法，可以跳转到 tabBar 页面。其中 Object 参数对象的属性列表如下</p><p>其中 url 参数是必填，其他是可选</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>url</td><td>String</td><td>需要跳转的 tabBar 页面的路径，路径后不能携带参数</td></tr><tr><td>success</td><td>function</td><td>接口调用成功的回调函数</td></tr><tr><td>fail</td><td>function</td><td>接口调用失败的回调函数</td></tr><tr><td>complete</td><td>function</td><td>接口调用结束的回调函数 (调用成功，失败都会执行)</td></tr></tbody></table><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gotoIndex<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>跳转到首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 跳转到首页</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token function">gotoIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        wx<span class="token punctuation">.</span><span class="token function">switchTab</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/pages/index/index'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h3 id="跳转到非tabbar页面"><a class="markdownIt-Anchor" href="#跳转到非tabbar页面">#</a> 跳转到非 tabBar 页面</h3><p>调用  <code>wx.navigateTo(Object Object</code>  方法，object 参数对象和上一个一样，就不做演示了</p><h3 id="后退导航-2"><a class="markdownIt-Anchor" href="#后退导航-2">#</a> 后退导航</h3><p>一样的，懒得说了 换成  <code>wx.navigateBack()</code>  就行 不过是 url 换成了 delta 而已</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">backOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    wx<span class="token punctuation">.</span><span class="token function">navigateBack</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">delta</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h2 id="导航传参"><a class="markdownIt-Anchor" href="#导航传参">#</a> 导航传参</h2><ol><li>声明式导航传参</li></ol><ul><li>参数与路径之间使用？分格</li><li>参数键与参数值用 = 相连</li><li>不同参数用 &amp; 分格</li></ul><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/pages/info/info?name=zs&amp;age=20<span class="token punctuation">"</span></span> <span class="token attr-name">open-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navigate<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>跳转info页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><ol start="2"><li><p>编程式导航也是一样的</p></li><li><p>在 onLoad 中接收导航传参</p></li></ol><p>通过声明式导航传参和编程式导航传参所携带的参数，可以直接在 onLoad 事件中直接获取到</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     * 生命周期函数 -- 监听页面加载</pre></td></tr><tr><td data-num="3"></td><td><pre>     */</pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><hr><h1 id="页面事件"><a class="markdownIt-Anchor" href="#页面事件">#</a> 页面事件</h1><h2 id="下拉刷新事件"><a class="markdownIt-Anchor" href="#下拉刷新事件">#</a> 下拉刷新事件</h2><p>就是手指在屏幕的下拉滑动操作，从而重新加载页面数据</p><ol><li><p>全局开启下拉刷新<br>在 app.json 的 window 节点中将 enablePullDownRefresh 设置成 true 就行</p></li><li><p>局部开启下拉刷新</p></li></ol><p>在对应的 json window 节点中设置就行 推荐使用第二种方式</p><ol start="3"><li>监听页面的下拉刷新事件</li></ol><p>在页面的.js 文件中，通过 <code>onPullDownRefresh()</code>  函数即可监听当前的下拉刷新事件</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"触发了demo页面的下拉刷新"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><ol start="4"><li><strong>停止下拉刷新的效果</strong></li></ol><p>当处理完下拉刷新后，loading 效果会一直显示，不会主动消失，调用 <code>wx.stopPullDownRefresh()</code>  就可以停止当前页面的下拉刷新</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>number <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"触发了demo页面的下拉刷新"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        wx<span class="token punctuation">.</span><span class="token function">stopPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h2 id="上拉触底事件"><a class="markdownIt-Anchor" href="#上拉触底事件">#</a> 上拉触底事件</h2><p>通过手指在屏幕上的上拉滑动操作，从而加载更多数据的行为</p><ol><li>监听页面的上拉触底事件</li></ol><p>在页面的.js 文件中，通过 <code>onReachBottom()</code>  函数即可监听当前页面的上拉触底事件</p><ol start="2"><li>配置上拉触底距离</li></ol><p>触发上拉触底事件时，滚动条距离页面底部的距离<br>可以在.json 文件中 通过  <code>onReachBottomDistance</code>  来配置触底的距离 默认为 50px</p><ol start="3"><li>添加 loading 提示效果</li></ol><p>wx.showLoading () 可以显示 loading 提示框效果<br> wx.hideLoading () 关闭提示效果</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">getColors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'数据加载中...'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://www.escook.cn/api/color'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>              <span class="token literal-property property">colorList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>colorList<span class="token punctuation">,</span> <span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>          <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="14"></td><td><pre>          wx<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><hr><h1 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期">#</a> 生命周期</h1><p>指一个对象从 创建 -&gt; 运行 -&gt; 销毁 的整个阶段，强调的是一个时间段</p><ol><li>应用的生命周期函数</li></ol><p>小程序的生命周期函数需要在 app.js 中进行申明</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token comment">//  小程序初始化完成时，执行此函数，全局只触发一次，可以做初始化的工作</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>，</pre></td></tr><tr><td data-num="4"></td><td><pre>     </pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token comment">//  小程序启动。或从后台进入前台显示时触发</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token comment">// 小程序从前台进入后台时触发</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="2"><li>页面的生命周期函数</li></ol><p>小程序的页面生命周期函数需要在页面的.js 文件中进行声明</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 监听页面加载，一个页面只调用一次</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token comment">// 监听页面显示</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>       <span class="token comment">// 监听页面初次渲染完成，一个页面只调用一次</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token comment">// 监听页面隐藏</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token comment">// 监听页面卸载，一个页面只调用一次</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><hr><h1 id="wxs脚本"><a class="markdownIt-Anchor" href="#wxs脚本">#</a> WXS 脚本</h1><p>wxs 代码可以编写在 wxml 文件的  <code>&lt;wxs&gt;</code>  标签中，就好像 html 中的  <code>&lt;script&gt;</code>  标签内一样</p><ol><li>内嵌 wxs 脚本<br> wxml 文件中的每个<wxs></wxs>标签，必须提供 module 属性 ，用来指定当前 wxs 的模块名称 方便 wxml 中访问模块中的成员</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>view<span class="token operator">&gt;</span><span class="token punctuation">{</span>demo<span class="token punctuation">.</span><span class="token function">toUpper</span><span class="token punctuation">(</span><span class="token string">"zs"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>wxs module<span class="token operator">=</span><span class="token string">"demo"</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token comment">// 将文本转为大写 如 zs=&gt; ZS</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function-variable function">toUpper</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>wxs<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><p>一般用来当过滤器来使用</p><ol start="2"><li>定义外联的 wxs 脚本</li></ol><p>就好像 javascript 可以编写在.js 后缀的文件中…</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">//tools.wxs 文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">// 字母小写</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">function</span> <span class="token function">toLower</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token literal-property property">toLower</span><span class="token operator">:</span> toLower</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><ol start="3"><li>使用外联的 wxs 脚本</li></ol><ul><li>module 用来指定模块的名称</li><li>src 用来指定要引入的脚本路径，必须是相对路径</li></ul><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span> {m2.toLower("LS")}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wxs</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../utils/tools.wxs<span class="token punctuation">"</span></span> <span class="token attr-name">module</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wxs</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><hr><h1 id="自定义组件"><a class="markdownIt-Anchor" href="#自定义组件">#</a> 自定义组件</h1><h2 id="组件的创建于引用"><a class="markdownIt-Anchor" href="#组件的创建于引用">#</a> 组件的创建于引用</h2><ol><li>创建组件<ul><li>在根目录创建  <code>components</code>  文件</li><li>右键新建 component 会自动生成组件对应的 4 个文件 .js .json .wxml .wxss</li></ul></li><li>引用组件<br>在 .json 配置文件中引用即可，全局配置在 <code>app.json</code></li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token string-property property">"usingComponents"</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token string-property property">"my-test"</span><span class="token operator">:</span> <span class="token string">"/components/test/test"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><ol start="3"><li>组件与页面的区别</li></ol><ul><li>组件中需要声明  <code> "component": true,</code></li><li>组件的方法需要定义在  <code>methods</code>  节点中</li></ul><h2 id="properties-属性"><a class="markdownIt-Anchor" href="#properties-属性">#</a> properties 属性</h2><p>类似 vue 中的 prop</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 完整写法</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>          <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token comment">// 数据类型</span></pre></td></tr><tr><td data-num="6"></td><td><pre>          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span>      <span class="token comment">// 属性默认值</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token comment">// 简写</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token literal-property property">number</span><span class="token operator">:</span> Number </pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p>父组件传参</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-test</span> <span class="token attr-name">number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-test</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-test</span> <span class="token attr-name">number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{num}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-test</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><h2 id="组件的生命周期"><a class="markdownIt-Anchor" href="#组件的生命周期">#</a> 组件的生命周期</h2><ul><li>created: 组件实例刚刚被创建时执行</li><li>attached: 组件实例进入页面节点数时执行</li><li>ready: 组件在视图层布局完成后执行</li><li>moved： 组件实例被移动到节点树另一个位置时执行</li><li>detached: 组件实例被从页面节点树移除时执行</li></ul><ol><li>lifetimes 节点<br>在小程序中生命周期可以定义在  <code>lifetimes</code>  内进行声明</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token literal-property property">lifetimes</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><ol start="2"><li>pageLifetimes 节点<br>组件所在页面的生命周期函数</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token literal-property property">pageLifetimes</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">// 页面被展示</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token comment">// 页面被隐藏</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">// 页面尺寸变化</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h2 id="数据监听器"><a class="markdownIt-Anchor" href="#数据监听器">#</a> 数据监听器</h2><p>类似 vue 中的 watch 侦听器 ，用于监听和响应任何属性和数字字段的变化，从而执行特定的操作。</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 监听器</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token literal-property property">observers</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token comment">// 单个</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token string-property property">'number'</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token comment">// 多个</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token string-property property">'num1,num2'</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span>num2</span><span class="token punctuation">)</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><p>监听对象属性的变化</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token literal-property property">observers</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token string-property property">'object.num1,object.num2'</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span>num2</span><span class="token punctuation">)</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// do something</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h2 id="插槽"><a class="markdownIt-Anchor" href="#插槽">#</a> 插槽</h2><p>可以提供一个 <code>&lt;slot&gt;</code>  节点 用于承载组件使用者提供的 wxml 结构</p><ol><li>启用多个插槽</li></ol><p>在自定义组件中，需要使用多个 <code>&lt;slot&gt;</code>  插槽时，可以在.js 文件中通过以下方法打开</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token comment">// 在组件定义时的选项中启动多个 slot</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token literal-property property">multipleSlots</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="2"><li>定义多个插槽</li></ol><p>使用不同的 name 来区分不同的插槽</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"left"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><ol start="3"><li>使用多个插槽</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>pinkBox<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"www"</span> slot<span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"www"</span> slot<span class="token operator">=</span><span class="token string">"left"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>pinkBox<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h2 id="父子组件之间的通信"><a class="markdownIt-Anchor" href="#父子组件之间的通信">#</a> 父子组件之间的通信</h2><h3 id="父子组件之间通信的3种方式"><a class="markdownIt-Anchor" href="#父子组件之间通信的3种方式">#</a> 父子组件之间通信的 3 种方式</h3><ol><li>属性绑定</li></ol><ul><li>用于父组件向子组件的指定属性设置数据，仅能设置 JSON 兼容的数据</li></ul><ol start="2"><li>事件绑定</li></ol><ul><li>用于子组件向父组件传递数据，可以传递任意数据</li></ul><ol start="3"><li>获取组件实例</li></ol><ul><li>父组件可以通过  <code>this.selectComponent()</code>  获取子组件实例对象</li><li>这样就可直接访问子组件的任意数据和方法</li></ul><h3 id="属性绑定"><a class="markdownIt-Anchor" href="#属性绑定">#</a> 属性绑定</h3><p>属性绑定用于实现父向子传值，而且只能传递普通类型的数据，无法将方法传递给子组件。</p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">&lt;!-- 父组件的 data 节点 --&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>data:{</pre></td></tr><tr><td data-num="4"></td><td><pre>  count:0</pre></td></tr><tr><td data-num="5"></td><td><pre>}</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">&lt;!-- 父组件的 wxml 结构 --&gt;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token attr-name">count</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{ count }<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><p>子组件在 properties 节点中声明对应的属性并使用</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 子组件的 properties 节点</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 完整写法</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token comment">// 类型</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span>      <span class="token comment">//  默认值</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token comment">// 简写</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">count</span><span class="token operator">:</span>Number</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">// 子组件的 wxml 结构</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token operator">&lt;</span>text<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swig￼<span class="token number">0</span><span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>text<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h3 id="事件绑定-2"><a class="markdownIt-Anchor" href="#事件绑定-2">#</a> 事件绑定</h3><p>事件绑定用于实现子向父传值，可以传递任何类型的数据</p><ol><li>在父组件的 js 中定义一个函数，这个函数即将通过自定义事件的形式，传递给子组件</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">syncCount</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'syncCount'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><ol start="2"><li>在父组件中的 wxml 中，通过自定义事件的形式，将步骤 1 中定义的函数引用，传递给子组件</li></ol><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pinkBox</span> <span class="token attr-name">num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{num}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>syncCount<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><ol start="3"><li>在子组件的 js 中，通过调用 this.triggerEvent (‘自定义事件名称’,{参数对象})，将数据发送到父组件</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">addNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span>num <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">// 触发自定义事件，将数值同步给父组件</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">'sync'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span>num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><ol start="4"><li>在父组件的 js 中，通过 <code>e.detail</code>  获取到子组件传递过来的数据</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token function">syncCount</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'syncCount'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>detail<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h3 id="获取组件实例"><a class="markdownIt-Anchor" href="#获取组件实例">#</a> 获取组件实例</h3><p>可以在父组件里调用  <code>this.selectComponent("id或class选择器")</code> , 获取子组件的实例对象，从而直接访问子组件的任意数据和方法</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 父组件 wxml 结构</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>test num<span class="token operator">=</span><span class="token string">"{num}"</span> <span class="token literal-property property">bind</span><span class="token operator">:</span>sync<span class="token operator">=</span><span class="token string">"syncCount"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"customA"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>test<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>button bindtap<span class="token operator">=</span><span class="token string">"getChild"</span><span class="token operator">&gt;</span>获取子组件实例<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// js</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token function">getChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectComponent</span><span class="token punctuation">(</span><span class="token string">'.customA'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        child<span class="token punctuation">.</span><span class="token function">setdata</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span>child<span class="token punctuation">.</span>properties<span class="token punctuation">.</span>num <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 调用子组件的 setData 方法</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        child<span class="token punctuation">.</span><span class="token function">addNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 调用子组件的 addNum 方法</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h2 id="behaviors"><a class="markdownIt-Anchor" href="#behaviors">#</a> behaviors</h2><p>用于实现组件之间代码共享的特性，类似 vue 中的 mixins</p><p>每个 behavior 可以包含一组 属性，数据，生命周期函数和方法。 组件引用它时，它的属性，数据和方法会被合并到组件中。</p><p>每个组件可以引用多个 behavior ， behavior 也可以引用其他的 behavior</p><ol><li>创建 behavior</li></ol><p>调用 Behavior (object object) 方法即可创建一个共享的 behavior 实例对象 供所有的组件使用</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">Behavior</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="2"><li>导入并使用 behavior</li></ol><p>在组件中，使用  <code>require()</code>   方法导入需要的 behavior，挂在后即可访问 behavior 中的数据和方法</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> myBehavior <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"../behaviors/my-behavior"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">behaviors</span><span class="token operator">:</span> <span class="token punctuation">[</span>myBehavior<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">// wxml</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">&lt;</span>view<span class="token operator">&gt;</span> behavior中定义的用户名：<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swig￼<span class="token number">1</span><span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h1 id="api-promise化"><a class="markdownIt-Anchor" href="#api-promise化">#</a> API Promise 化</h1><p>在小程序中，实现 API Promise 化主要依赖于  <code>miniprogram-api-promise</code>  第三方的 npm 包。</p><p><code>npm i -s miniprogram-api-promise</code></p><p>然后在小程序入口文件 app.js 只需要调用一次 promisefyAll () 方法，即可实现异步 API 的 Promise 化</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">//app.js</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>promisifyAll<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'miniprogram-api-promise'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">const</span> wxp <span class="token operator">=</span> wx<span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token function">promisifyAll</span><span class="token punctuation">(</span>wx<span class="token punctuation">,</span> wxp<span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p><strong>调用 promise 化的异步 api</strong></p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">async</span> <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span> res<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> wx<span class="token punctuation">.</span>p<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://www.escook.cn/api/get'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><h1 id="全局数据共享"><a class="markdownIt-Anchor" href="#全局数据共享">#</a> 全局数据共享</h1><p>为了解决组件之间数据共享的问题 类似 vuex</p><p><strong>小程序中的全局数据共享方案</strong></p><p>在小程序中可以使用 <code>mobx-miniprogram</code>  配合  <code>mobx-miniprogram-bindings</code>  实现全局数据共享</p><ul><li>mobx-miniprogram 用来创建 Store 实例对象</li><li>mobx-miniprogram-bindings 用来把 Store 中的共享数据或方法，绑定到组件或页面中使用</li></ul><ol><li>安装 MobX 相关的包</li></ol><p><code>npm i mobx-miniprogram mobx-miniprogram-bindings</code></p><ol start="2"><li>在项目根目录创建 store 文件</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// store\store.js</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">// 在这个 js 文件中 专门来创建 Store 的实例对象</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    observable<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    action</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'mobx-miniprogram'</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">observable</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token comment">// 数据字段</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token literal-property property">numA</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token literal-property property">numB</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token comment">// 计算属性</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token keyword">get</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numA <span class="token operator">+</span> <span class="token string">'!!!'</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token comment">//actions 方法 专门用来修改 store 中的值</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token literal-property property">updateNumA</span><span class="token operator">:</span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">step</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>numA <span class="token operator">+=</span> step</pre></td></tr><tr><td data-num="20"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    </pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="3"><li>将 Store 中的成员绑定到<span style="color:red;">页面</span>中</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 页面的 .js 文件</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">// 导入需要的成员</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 通过此方法可以将 store 中的数据或者方法绑定到当前页面中</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>createStoreBindings<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'mobx-miniprogram-bindings'</span> </pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// </span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>store<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../../store/store'</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token comment">// 在生命周期函数中进行绑定工作</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>storeBindings <span class="token operator">=</span> <span class="token function">createStoreBindings</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>          store<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>          <span class="token literal-property property">fields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'numA'</span><span class="token punctuation">,</span> <span class="token string">'numB'</span><span class="token punctuation">,</span> <span class="token string">'sum'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 需要的数据</span></pre></td></tr><tr><td data-num="14"></td><td><pre>          <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'updateNumA'</span><span class="token punctuation">]</span>          <span class="token comment">// 需要的方法</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span>    </pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token comment">//  - 监听页面卸载 中做清理的工作</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token function-variable function">onUnload</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>storeBindings<span class="token punctuation">.</span><span class="token function">detoryStoreBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="4"><li>在页面上使用 Store 中的成员</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swig￼<span class="token number">2</span><span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swig￼<span class="token number">3</span><span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>view<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swig￼<span class="token number">4</span><span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">&lt;</span>button bindtap<span class="token operator">=</span><span class="token string">"bindHandler"</span> data<span class="token operator">-</span>step<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">&gt;</span>num<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">// js</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token function">bindHandler</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateNumA</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>step<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr></tbody></table></figure><p>5. 将 Store 中的成员绑定到<span style="color:red;">组件</span>中</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// components/test/test.js</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>storeBindingsBehavior<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'mobx-miniprogram-bindings'</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>store<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../../store/store'</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="6"></td><td><pre>     * 组件的属性列表</pre></td></tr><tr><td data-num="7"></td><td><pre>     */</pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">behaviors</span><span class="token operator">:</span> <span class="token punctuation">[</span>storeBindingsBehavior<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 通过 storeBindingsBehavior 来实现自动绑定、</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">storeBindings</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        store<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token literal-property property">fields</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 指定需要绑定的字段数据</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token function-variable function">numA</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>numA<span class="token punctuation">,</span> <span class="token comment">// 绑定字段的 第 1 种方式</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token function-variable function">numB</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">store</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>numB<span class="token punctuation">,</span> <span class="token comment">// 绑定字段的 第 2 种方式</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token literal-property property">sum</span><span class="token operator">:</span> <span class="token string">'sum'</span> <span class="token comment">// 绑定字段的 第 3 种方式</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 指定要绑定的方法</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token literal-property property">updateNumA</span><span class="token operator">:</span> <span class="token string">'updateNumA'</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p>6. 在组件中使用</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"containerBox"</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>swig￼<span class="token number">6</span><span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token operator">&lt;</span>button bindtap<span class="token operator">=</span><span class="token string">"numAdd"</span> data<span class="token operator">-</span>step<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>   </pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">// js</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token function">numAdd</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateNumA</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>step<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><h1 id="分包"><a class="markdownIt-Anchor" href="#分包">#</a> 分包</h1><p>指把一个完整的小程序项目，按需求划分为不同的子包，在构建时打包成不同的分包，用户在使用时按需进行加载，</p><h2 id="使用分包"><a class="markdownIt-Anchor" href="#使用分包">#</a> 使用分包</h2><ol><li>配置方法</li></ol><p>开发者通过在  <code>app.json subpackages</code>  字段声明项目分包结构：</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token string-property property">"pages"</span><span class="token operator">:</span><span class="token punctuation">[</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token string">"pages/index"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token string">"pages/logs"</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token string-property property">"subpackages"</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token string-property property">"root"</span><span class="token operator">:</span> <span class="token string">"packageA"</span><span class="token punctuation">,</span>  <span class="token comment">//分包根目录</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token string-property property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>           <span class="token comment">// 分包页面路径，相对于分包根目录</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token string">"pages/cat"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token string">"pages/dog"</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      <span class="token string-property property">"root"</span><span class="token operator">:</span> <span class="token string">"packageB"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      <span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"pack2"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>      <span class="token string-property property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token string">"pages/apple"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token string">"pages/banana"</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="21"></td><td><pre>  <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><ol start="2"><li>引用原则</li></ol><ul><li>主包无法引用分包内的私有资源</li><li>分包之间不能相互引用私有资源</li><li>分包可以引用主包内的公共资源</li></ul><h2 id="独立分包"><a class="markdownIt-Anchor" href="#独立分包">#</a> 独立分包</h2><p>独立分包本质上也是分包，但是可以独立于主包和其他分包而单独运行</p><ol><li>独立分包和普通分包的区别</li></ol><ul><li>普通分包必须依赖于主包才能运行</li><li>独立分包可以在不下载主包的情况下独立运行</li></ul><ol start="2"><li>独立分包配置方法</li></ol><p>与普通分包相同，只需在 <code>subpackages</code>  字段中对应的分包配置项中定义 <code>independent</code>  字段声明对应分包为独立分包。</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token string-property property">"subpackages"</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>      <span class="token string-property property">"root"</span><span class="token operator">:</span> <span class="token string">"moduleA"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="4"></td><td><pre>      <span class="token string-property property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token string">"pages/rabbit"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token string">"pages/squirrel"</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token string-property property">"root"</span><span class="token operator">:</span> <span class="token string">"moduleB"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      <span class="token string-property property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token string">"pages/pear"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token string">"pages/pineapple"</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      <span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token operator">+</span>      <span class="token string">"independent"</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token punctuation">]</span></pre></td></tr></tbody></table></figure><ol start="3"><li>引用原则</li></ol><p>独立分包和普通分包以及主包之间是相互隔绝的，不能相互引用彼此的资源，独立分包也不能引用主包内的公共资源。</p><h2 id="分包预下载"><a class="markdownIt-Anchor" href="#分包预下载">#</a> 分包预下载</h2><p>指在进入小程序的某个页面，由框架自动预下载可能需要的分包，从而提高进入后续分包页面的启动速度</p><ol><li>配置分包预下载</li></ol><p>预下载分包行为在进入某个页面时触发，通过在  <code>app.json</code>  增加  <code>preloadRule</code>  配置来控制。</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token string-property property">"preloadRule"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// 分包预下载的规则</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token string-property property">"pages/index"</span><span class="token operator">:</span> <span class="token punctuation">{</span>   <span class="token comment">// 触发分包预下载的页面路径</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token string-property property">"network"</span><span class="token operator">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>   <span class="token comment">// 表示在指定的网络模式下进行预下载，all (不限网络) 和 wifi</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token string-property property">"packages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"important"</span><span class="token punctuation">]</span>  <span class="token comment">//package 表示进入页面后预下载哪些分包</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token string-property property">"sub1/index"</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token string-property property">"packages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"sub3"</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token string-property property">"sub3/index"</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token string-property property">"packages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"path/to"</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token string-property property">"indep/index"</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token string-property property">"packages"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"__APP__"</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;wxml-和-html-的区别&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#wxml-和-html-的区别&quot;&gt;#&lt;/a&gt; WXML 和 HTMl 的区别&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;标签名称不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HT</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="小程序" scheme="http://mrnobody233.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>长沙之旅</title>
    <link href="http://mrnobody233.github.io/2022/08/10/%E9%95%BF%E6%B2%99%E4%B9%8B%E6%97%85/"/>
    <id>http://mrnobody233.github.io/2022/08/10/%E9%95%BF%E6%B2%99%E4%B9%8B%E6%97%85/</id>
    <published>2022-08-10T13:28:01.000Z</published>
    <updated>2022-08-25T11:21:47.610Z</updated>
    
    <content type="html"><![CDATA[<p>仿佛做了一个很长的梦，醒后特别疲惫，打开相册和微信后，发现一切又是真实发生的，那就是我 7 号去了长沙，和我的两位初中同学，简称 X 和 S，明明是八个人的群，五个女生，三个男生，今年出来玩的只有三个人，其他人不是工作了就是家里管得严，想到这些后更加坚定了我要去玩的想法，用不了多久我也将成为他们的一份子，忙于工作和其他事，抽不出时间和好友享受生活。</p><p>这次去长沙可以说是我真正意义上和好朋友出去旅游，也是第一次和两个女生去旅游，可以说是非常幸福的一件事情，因为我不用担心去哪里玩，也不需要准备太多的东西，她们该准备的都会准备好，而我需要做的事情就是帮她们拿这些东西就是，7 号晚上八点半，我与 X 一同去南昌西站乘坐高铁，而 S 是从广州出发去长沙，如果不是疫情，也许我会和 X 或者其他的字母一起去广州找 S 玩，去跳伞，看海，尝试各种新鲜的事情，但不是所有事都能如愿，能去长沙就已经很满足了。</p><p>去长沙的高铁上我和 X 边吃零食边看《招魂 2》，大概算一下，她吃了我买的四包波力海苔，半包草莓巧克力棒，一小瓶旺仔牛奶，半包乐事薯片，如果不是我带的少，我相信她还能接着吃下去，大概过了一个半小时就到了长沙，然后等 S 来后一起把包丢在我身上就一起去做核酸，接着就是打车去宾馆，凌晨 12 点左右到，然后去宾馆下面吃羊肉串，天哪巨好吃，知道为什么吗，因为巨好吃！ 哈哈，其实是放多了料，我口味又比较重，加上只有一块肥肉。</p><p>接着又发生了在长沙的第一件比较有意思的事情，就是坐在我后面那桌的人喝多了，和自己的同伴发生了冲突，把桌子都掀了，酒瓶都拿在手里了，S 和 X 都对我招手，让我赶紧到她们那边去，而我还沉浸在羊肉串的美味里无法自拔，还是一边看他们边吃，直到 S 叫出声了，都爬到 X 的身上了，我才坐到 S 的位置上去，后面也没干起来，被他的同伴拉走了，这件事情的受害者是在睡觉的新疆小女孩，被锤了两拳还没碎的玻璃桌子，还有被 S 和 X 嘲笑的我。不知道发生了什么事情，她们说我边吃羊肉串边看他们发生冲突的场景特别出戏，又搞笑又害怕酒瓶砸在我头上。她们就这样笑到回酒店，我唯一注意的事情是捶桌子的人还为吵醒小朋友睡觉而感到抱歉。</p><p>回宾馆后已经一点左右了，她们发现宾馆房间的光线照在床上特别好看，然后就想拍照了，这个床上比较热，让我来睡这张床，但是她们又要拍照，所以我只能去她们要睡的床上趴着，她们就这样拍到了凌晨三点钟，我因为打不过就加入了她们，也拍了几张我特别好看的照片，和两个我吐槽她们的视频，然后睡了，到了早上六点，睡了三个小时左右，就大概睡不着了，我和 S 吵醒了 X，X 也睡不着了，给我喷了一身防晒霜，滴了两下眼药水就准备出发去橘子洲看毛爷爷了。</p><p>人真的特别多，原本以为早上大家都起不来，结果却相反，不管是上地铁，坐地铁还是下地铁，人都不带少的，大部分人的目的都是去看毛爷爷，到站后我们三个韭菜一起花了 120 元做观光车到毛爷爷头像下拍照，真的巨热，人又巨多，X 的墨镜轮了一圈到我，给我拍了一张巨傻逼的照片，她们又说我拍的巨帅，虽然我觉得不好看，但我还是留了下来，再叫路人给我们三个一起拍了一张，我和 S 因为没有墨镜，所以只有 X 拍的巨好看，我们两个只能拿手遮着阳光跟个弱智一样。完事后准备去岳麓山的，排队时听他们说买到票还要去上面排两小时才能做到缆车，然后我们果断放弃回酒店睡大觉。</p><p>因为茶颜悦色就在酒店的下面，也是刚开门，所以我没有排队就买到了，确实蛮好喝的，我喝的是椰子什么东东，她们的我也尝了一口，蛮清爽的，吃过午饭后问她们还想不想喝，然后我又接着去买，但是人变多了，我大概等了半小时多才买到，上去后尝了一口，我的妈啊那个奶油真的太腻了，我这杯就喝了三分之一就没喝了。给我留下了深刻的印象和阴影，然后好像是我躺在她们两个中间睡午觉，已经记不起是 8 号还是 9 号了，又好像两天都睡过。</p><p>现在脑袋已经过载了，稍微细一点的事情都记不起来了，那就总结一下吧，这个地方对我来说不算好玩，但是有了两个大爷来说充满了乐趣，用她们的洗发水和洗面奶，让我充满了女人味，直到现在我洗了两次澡味道还没有洗掉，还有是去湖南博物馆我在中间拉着她们两个的手看文物，这个情况我从小就希望发生，不过是想要两个照顾弟弟姐姐来，没想过是拉着两个好朋友的手，真没想到这次去玩是我的人生巅峰。唯一难受的是需要帮一下她们拿包和给她们扇风，还需要给她们拍照，和有足够的耐心等她们拍照。不过我也被照顾了许多，累了她们也会拽着我走，会给我靠着，打车钱还没让我出，还买了许多小吃给我吃。</p><p>这次去玩大概花了一千左右，我记了金额较大的数字，零零碎碎的小钱没有算上去。</p><ul><li><code>来回的车票 314</code></li><li><code>两个晚上的宾馆 267.4</code></li><li><code>打车费 16.6</code></li><li><code>橘子洲观光车 40 -没用学生票</code></li><li><code>六杯茶颜悦色 97</code></li><li><code>下馆子 75.3</code></li><li><code>博物馆两个特展学生票 40</code></li><li><code>离开湖南的最后一餐火锅 90.3</code></li></ul><p>一共是  <code>940.6</code> , 学到的东西是吃火锅不要点生菜和牛肉丸 TAT，和她们出去玩确实很不错，需要 AA 的钱她们都会立马转，问她们去吃什么立马都会决定好，很少听到过 <code>随便</code> ， <code>都行</code> ，这几个字，做事也不会拖泥带水，拍的照片非常好看，P 图技术特别牛逼，在回南昌的高铁上看她们 P 了十几分钟才一张照片给我极大地震撼，让我感到非常羞愧，因为我会吐槽她们的朋友圈照片，嘴下从不留情，要多贱有多贱，现在带入进去就是我辛辛苦苦做了一个网页，被人一句话好丑，这里不行，那里不行，血压直接飙升。所以她们要是再发朋友圈我一定会好好欣赏，然后夸一下她们，会评论 <code>姐姐本来就很好看，根本就不用花半小时来P图</code> ，让她们感受人间险恶，哈哈哈哈，就这样，玩的很开心，掰掰  😋 ~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;仿佛做了一个很长的梦，醒后特别疲惫，打开相册和微信后，发现一切又是真实发生的，那就是我 7 号去了长沙，和我的两位初中同学，简称 X 和 S，明明是八个人的群，五个女生，三个男生，今年出来玩的只有三个人，其他人不是工作了就是家里管得严，想到这些后更加坚定了我要去玩的想法，用</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
    <category term="旅游" scheme="http://mrnobody233.github.io/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Vue懒加载</title>
    <link href="http://mrnobody233.github.io/2022/08/04/Vue%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <id>http://mrnobody233.github.io/2022/08/04/Vue%E6%87%92%E5%8A%A0%E8%BD%BD/</id>
    <published>2022-08-04T11:42:50.000Z</published>
    <updated>2022-08-17T13:08:22.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作用与定义"><a class="markdownIt-Anchor" href="#作用与定义">#</a> 作用与定义</h1><p>为给客户更好的客户体验，首屏组件加载速度更快一些，解决白屏问题。<br>懒加载简单来说就是延迟加载或按需加载，即在需要的时候的时候进行加载。</p><h1 id="路由懒加载"><a class="markdownIt-Anchor" href="#路由懒加载">#</a> 路由懒加载</h1><h2 id="未使用懒加载的路由代码如下"><a class="markdownIt-Anchor" href="#未使用懒加载的路由代码如下">#</a> 未使用懒加载的路由代码如下</h2><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>createRouter<span class="token punctuation">,</span> createWebHashHistory<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> HomeView <span class="token keyword">from</span> <span class="token string">'../views/HomeView.vue'</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'../views/About.vue'</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// 路由规则</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">//   一级路由布局容器</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/About'</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> About<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    </pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> router</pre></td></tr></tbody></table></figure><h2 id="使用路由懒加载的三种方式"><a class="markdownIt-Anchor" href="#使用路由懒加载的三种方式">#</a> 使用路由懒加载的三种方式</h2><ol><li>复杂但可显示组件名的方式</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHashHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> HomeView <span class="token keyword">from</span> <span class="token string">'../views/HomeView.vue'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView</pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token comment">/*webpackChunkName: 组件名称 */</span> <span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: "about" */</span><span class="token string">'../views/AboutView.vue'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  routes</pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> router</pre></td></tr></tbody></table></figure><ol start="2"><li>简单但不显示组件名的方式</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHashHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> <span class="token function-variable function">HomeView</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/HomeView.vue'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">const</span> <span class="token function-variable function">About</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../views/AboutView.vue'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView</pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">component</span><span class="token operator">:</span> About</pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  routes</pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> router</pre></td></tr></tbody></table></figure><ol start="3"><li>琢磨了一下，经过测试，既方便又可以显示组件名的方法 以后懒加载可以使用这个方法</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHashHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> <span class="token function-variable function">HomeView</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/*webpackChunkName:"Home"*/</span><span class="token string">'../views/HomeView.vue'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">const</span> <span class="token function-variable function">AboutView</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/*webpackChunkName: "About"*/</span><span class="token string">'../views/AboutView.vue'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView</pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token literal-property property">component</span><span class="token operator">:</span> AboutView</pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHashHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  routes</pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> router</pre></td></tr></tbody></table></figure><hr><h1 id="组件数据懒加载"><a class="markdownIt-Anchor" href="#组件数据懒加载">#</a> 组件数据懒加载</h1><p>我们可以使用  <code>@vueuse/core</code>  中的  <code>useIntersectionObserver</code>  来实现监听进入可视区域行为，但是必须配合 vue3.0 的组合 API 的方式才能实现。</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装">#</a> 安装</h2><p><code>npm i  @vueuse/core</code></p><h2 id="分析useintersectionobserver函数"><a class="markdownIt-Anchor" href="#分析useintersectionobserver函数">#</a> 分析 <code>useIntersectionObserver</code>  函数</h2><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">//  导入 useIntersectionObserver  函数</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> useIntersectionObserver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@vueuse/core'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">// 1. stop 是停止观察是否进入或移出可视区域的行为    </span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">{</span> stop <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useIntersectionObserver</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">// 2. target 是观察的目标 dom 容器，必须是 dom 容器，而且是 vue3.0 方式绑定的 dom 对象</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  target<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">// 3.  isIntersecting 是否进入可视区域，true 是进入 false 是移出</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">// 4. observerElement 被观察的 dom</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token punctuation">{</span> isIntersecting <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> observerElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token comment">// 在此处可根据 isIntersecting 来判断，然后做业务</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><h2 id="封装代码-逻辑复用"><a class="markdownIt-Anchor" href="#封装代码-逻辑复用">#</a> 封装代码 逻辑复用</h2><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 提供复用逻辑的函数 (钩子)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>useIntersectionObserver<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@vueuse/core/index"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="6"></td><td><pre> * 数据懒加载函数</pre></td></tr><tr><td data-num="7"></td><td><pre> * @param apiFn - API 函数</pre></td></tr><tr><td data-num="8"></td><td><pre> */</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useLazyData</span> <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token parameter">apiFn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// 监听的目标元素</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment">// 返回的数据</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token comment">//stop 停止观察</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">const</span> <span class="token punctuation">{</span>stop<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useIntersectionObserver</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// 监听的目标元素</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        target<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token punctuation">{</span>isIntersecting<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> observerElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token comment">//isIntersecting 是否进入可视区</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'进入可视区'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                <span class="token comment">// 调用 API 函数获取数据</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token function">apiFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                    result<span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">.</span>result</pre></td></tr><tr><td data-num="24"></td><td><pre>                <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">// 配置选项，相交的比例大于 0 就触发</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token keyword">return</span> <span class="token punctuation">{</span>target<span class="token punctuation">,</span>result<span class="token punctuation">}</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><h2 id="在页面中使用"><a class="markdownIt-Anchor" href="#在页面中使用">#</a> 在页面中使用</h2><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>+   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HomePanel</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>target<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>新鲜好物<span class="token punctuation">"</span></span> <span class="token attr-name">subTitle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>新鲜出炉 品质靠谱<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token comment">&lt;!-- 看见哪个盒子加载数据 就给哪个盒子加 ref="target" --&gt;</span></pre></td></tr></tbody></table></figure><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> findNew <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@/api/home'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">++</span><span class="token operator">+</span> <span class="token keyword">import</span> <span class="token punctuation">{</span> useLazyData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@/hooks'</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'HomeNew'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> HomePanel<span class="token punctuation">,</span> HomeSkeleton <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">++</span><span class="token operator">+</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> target<span class="token punctuation">,</span> result <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLazyData</span><span class="token punctuation">(</span>findNew<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">++</span><span class="token operator">+</span> <span class="token keyword">return</span> <span class="token punctuation">{</span> target<span class="token punctuation">,</span> <span class="token literal-property property">list</span><span class="token operator">:</span>result <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h2 id="踩坑"><a class="markdownIt-Anchor" href="#踩坑">#</a> 踩坑</h2><p>基础没打好，封装好数据懒加载代码后，没有实现效果找了亿点时间问题后发现在这个地方</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 在使用时候不要加上括号就行了，不然会立刻请求后台数据，呜呜</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">{</span> target<span class="token punctuation">,</span> result <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLazyData</span><span class="token punctuation">(</span>findNew<span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p>如果是需要传参的函数可以放一个回调函数进去，实在是太妙了！</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">const</span> <span class="token punctuation">{</span> target<span class="token punctuation">,</span> result <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLazyData</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">findBrand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><hr><h1 id="图片懒加载"><a class="markdownIt-Anchor" href="#图片懒加载">#</a> 图片懒加载</h1><h2 id="方法1原生webapi写法"><a class="markdownIt-Anchor" href="#方法1原生webapi写法">#</a> 方法 1（原生 WebAPI 写法）</h2><p><code>src/components/library/index.js</code> <br> 此路径专门用于 扩展 vue 原有的功能：全局组件，自定义指令，挂载原型方法。</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 导入数据加载失败的默认图片</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> defaultImg <span class="token keyword">from</span> <span class="token string">"@/assets/images/200.png"</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">// Vue2 全局注册组件</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// Vue.component (' 组件名 ', 组件)</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">// Vue3 全局注册组件</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">//app.component (' 组件名 ', 组件)</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment">//install 这种写法以后是提供给 app.use () 安装组件库用的</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token comment">// Vue3 全局注册组件</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">// app.component(XtxSkeleton.name, XtxSkeleton)</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// 定义指令</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token function">defineDirective</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token comment">// 定义指令</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">const</span> <span class="token function-variable function">defineDirective</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token comment">// 图片懒加载指令</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token comment">// 原理：先存储图片地址 不能在 src 上 当图片进入可视区 将你存储图片的地址设置给图片元素即可</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    app<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">'lazy'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token comment">// 配置选项</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token comment">// 创建一个观察对象，来观察当前使用指令的元素</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token keyword">const</span> observe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token punctuation">{</span>isIntersecting<span class="token punctuation">}</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                <span class="token keyword">if</span> <span class="token punctuation">(</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                    <span class="token comment">// 停止观察</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                    observe<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                    <span class="token comment">// 把指令的值设置给 el 的 src 属性，binding.value 就是指令的值</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                    <span class="token comment">// 处理图片加载失败</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                    el<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                        <span class="token comment">//  加载失败，设置默认图</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                        el<span class="token punctuation">.</span>src <span class="token operator">=</span> defaultImg</pre></td></tr><tr><td data-num="38"></td><td><pre>                    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                    el<span class="token punctuation">.</span>src <span class="token operator">=</span> binding<span class="token punctuation">.</span>value</pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>            observe<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><p>在 <code>main.js</code>  中导入</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 导入自己的 ui 组件库</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> XtxUI <span class="token keyword">from</span> <span class="token string">'@/components/library'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>XtxUI<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p>使用方法</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">""</span> v<span class="token operator">-</span>lazy<span class="token operator">=</span><span class="token string">"list.picture"</span> <span class="token operator">/</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h2 id="方法二npm包"><a class="markdownIt-Anchor" href="#方法二npm包">#</a> 方法二（npm 包）</h2><ol><li>安装</li></ol><p><code>npm i vue3-lazy -S</code></p><ol start="2"><li><code>main.js</code>  中全局注册</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>createApp<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">++</span><span class="token keyword">import</span> defaultImg <span class="token keyword">from</span> <span class="token string">'@/assets/images/200.png'</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> lazyPlugin <span class="token keyword">from</span> <span class="token string">'vue3-lazy'</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token operator">++</span>  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>lazyPlugin<span class="token punctuation">,</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token literal-property property">loading</span><span class="token operator">:</span> defaultImg<span class="token punctuation">,</span>        <span class="token comment">// 图片加载中时显示的默认图片</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token literal-property property">error</span><span class="token operator">:</span> defaultImg        <span class="token comment">// 图片加载失败后显示的图片</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="3"><li>使用</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre> <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">""</span> v<span class="token operator">-</span>lazy<span class="token operator">=</span><span class="token string">"list.picture"</span> <span class="token operator">/</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><p>4. 上一个方法可以看见加载失败的图片，这个方法不可以，在没有找到更好的方法之前，还是先用上一个方法吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;作用与定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#作用与定义&quot;&gt;#&lt;/a&gt; 作用与定义&lt;/h1&gt;
&lt;p&gt;为给客户更好的客户体验，首屏组件加载速度更快一些，解决白屏问题。&lt;br&gt;
懒加载简单来说就是延迟加载或按需加载，即在需要的时</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue动画</title>
    <link href="http://mrnobody233.github.io/2022/08/01/Vue%E5%8A%A8%E7%94%BB/"/>
    <id>http://mrnobody233.github.io/2022/08/01/Vue%E5%8A%A8%E7%94%BB/</id>
    <published>2022-08-01T12:55:26.000Z</published>
    <updated>2022-08-01T13:16:42.567Z</updated>
    
    <content type="html"><![CDATA[<p>当 vue 中，显示隐藏，创建移除，一个元素或者一个组件的时候，可以通过 <code>transition</code>  实现动画。</p><ul><li><p>进入（显示，创建）</p><ul><li>v-enter-from 初始状态 （vue2.0 v-enter）</li><li>v-enter-active 进行中</li><li>v-enter-to 结束状态</li></ul></li><li><p>离开（隐藏，移除）</p><ul><li>v-leave-from 初始状态 （vue2.0 v-leave）</li><li>v-leave-active 进行中</li><li>v-leave-to 结束状态</li></ul></li></ul><h1 id="案例"><a class="markdownIt-Anchor" href="#案例">#</a> 案例：</h1><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show=true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>显示|创建<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show=false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>隐藏|移除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token selector">.v-enter-from</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token selector">.v-enter-active</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token selector">.v-enter-to</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token selector">.v-leave-from</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token selector">.v-leave-active</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token selector">.v-leave-to</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="22"></td><td><pre>  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><h1 id="注意"><a class="markdownIt-Anchor" href="#注意">#</a> 注意</h1><ul><li><code>transition</code>  只能包一个标签或者一个组件。</li><li>动画名称 name=“v” 为默认值，可以把修改成其他名字，可用于多个 transition 使用不同动画</li></ul><h2 id="案例-2"><a class="markdownIt-Anchor" href="#案例-2">#</a> 案例</h2><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token selector">.demo-enter-from</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token selector">.demo-enter-active</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token selector">.demo-enter-to</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当 vue 中，显示隐藏，创建移除，一个元素或者一个组件的时候，可以通过 &lt;code&gt;transition&lt;/code&gt;  实现动画。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;进入（显示，创建）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;v-enter-from 初始状态 （vue2.0 v-e</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>滑板骚年</title>
    <link href="http://mrnobody233.github.io/2022/07/18/%E6%BB%91%E6%9D%BF%E9%AA%9A%E5%B9%B4/"/>
    <id>http://mrnobody233.github.io/2022/07/18/%E6%BB%91%E6%9D%BF%E9%AA%9A%E5%B9%B4/</id>
    <published>2022-07-18T15:56:40.000Z</published>
    <updated>2022-08-25T11:22:05.981Z</updated>
    
    <content type="html"><![CDATA[<p>太爽啦，早起的感觉真不戳，为什么早起捏，因为昨天太困了，为什么昨天太困了，因为前几天睡眠状态很差，为什么睡眠状态差，因为最近几天又要做核酸了，为什么要做核酸，可以打个电话问一下防疫中心。总之早起还是很舒服的，在早餐店看了半天，还是一碗猪血粉，本来想一碗拌粉一碗肉饼汤的，怕我吃不完，回去后躺在床上看闲鱼，越看越想买，<span class="exturl" data-url="aHR0cHM6Ly9hc2lhLnBlbm55c2thdGVib2FyZHMuY29tLw==">penny 板（点我去官网）</span>，实际上我已经有了一个小鱼板，是我高中时候和足球队的几个小伙伴一起买的，玩得很开心，晚自习跑到学校附近的心怡广场去滑滑板，地方大，地板还是瓷的，滑起来简直不要太爽，从此我想着以后不玩双翘板做花式动作，只用小鱼板吹吹风，学会一个 Ollie 就满足了。</p><p>美好的时光总是短暂的，随着高中毕业，我的小鱼板彻底被我抛弃在家桌子底下积灰，直到最近有朋友想玩滑板我才拿出来，仔细观摩滑板上的痕迹，那是我回不去的青春～～～～呜呜呜呜。咳咳，所以我买 penny 小鱼板的原因是因为我现在的板子是枫木板，而 penny 是塑料板，也许会比枫木板轻一点，更好携带，代步更加方便，所以我去看了两天闲鱼，终于下定决心买了，是一款辛普森联名的滑板，四年前的东西，已经绝版了，我看中的白色已经没货了，只能买粉色，只要我不惧他人眼光，就算我穿裙子也可以滑的灰常漂亮，嘎嘎嘎，滑滑板带着口罩就行了摔跤了也没人认出来。这样想着我付了 800 块钱拍下来了，如果是官网的话大部分都是 750 元左右，他妈的国内卖 1000 多，我真的要杀了他妈，当我韭菜这么好割的。拍下滑板后，再去淘宝逛了一圈，买了一个滑板背包，我已经想象到我背着滑板去上课的场景了，简直不要太帅，也想到了我摔跤后，他们几个嘲笑我的社死现场，所以玩滑板真的得有个伴，这也是我为什么没把枫木板带到学校的原因。</p><p>下午叫我弟和妹去打羽毛球，太 tm 热了，在里面都喘不过气，关键是里面没有空调只有风扇，而且一个小时居然 60 快，操，我以为我学校 30 块钱没空调已经很贵了，结果外面居然要 60 元，真是长见识了，想运动运动出点汗结果还要花钱，那我干脆跑步得了，不需要场地，不需要伴，一双腿想怎么跑就这么跑，打完后回我弟弟家下了王者，打了一局，这么久没玩感觉还是没有变化，现在对游戏好像没有什么太大的欲望了，除了 Minecraft，即使这样我也没看书，也很少写代码，可能是线下生活更加充实了，晚上和我好朋友去玩滑板，她买了个 500 元的双翘板，呜呜呜，我上去踩了两脚，切～～肯定没我的小鱼板好玩啦，毕竟我的需求只有代步和续航，我蹬一脚几十米远，她蹬一脚才 5 6 米远，太拉了，但是小鱼板玩花式比较难，但为了我 800 元的 penny 板，我一定会努力的！！</p><p>明天是她的生日，完了，我博客写上头了，现在已经 2022 年 7 月 19 日 00:21:42 了，太草了，我就说好像忘了什么，既然忘了那就继续写吧，祝 xiaoxiao 生日快乐～🎂 因为疫情本来是去她家里吃饭的，我都想好怎么叫叔叔阿姨了，可惜她闺蜜下课太晚了，只能去外面吃了咯，具体吃什么她好像还没想好，但我只管吃就行啦 🤤。</p><p>今天就到这里吧，早上还得做核酸，大概 6 点多起来吧，但我今天运动过渡已经很累了，也许会睡得很香吧～等过两天我就开始好好学习，真的 🤡 如果没有那我就去拉屎，流汗的感觉真是太爽啦，希望以后这样的生活也可以多一点，掰掰   😋</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;太爽啦，早起的感觉真不戳，为什么早起捏，因为昨天太困了，为什么昨天太困了，因为前几天睡眠状态很差，为什么睡眠状态差，因为最近几天又要做核酸了，为什么要做核酸，可以打个电话问一下防疫中心。总之早起还是很舒服的，在早餐店看了半天，还是一碗猪血粉，本来想一碗拌粉一碗肉饼汤的，怕我</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>我直接嗨</title>
    <link href="http://mrnobody233.github.io/2022/07/07/%E6%88%91%E7%9B%B4%E6%8E%A5%E5%97%A8/"/>
    <id>http://mrnobody233.github.io/2022/07/07/%E6%88%91%E7%9B%B4%E6%8E%A5%E5%97%A8/</id>
    <published>2022-07-07T13:28:56.000Z</published>
    <updated>2022-07-07T14:51:05.094Z</updated>
    
    <content type="html"><![CDATA[<p>已经放暑假好多好多天了，在奶奶家已经放松过渡啦，电脑都积灰，《美丽新世界》也就看了三章，那我这些天在干什么捏，让我来回忆一下，回忆完了，就是玩，各种玩，困了就睡，起来就中午 12 点，下午拿我弟弟的电脑玩会儿 apex，晚上十点多饿了就和我堂弟去吃羊肉串，美好的日子随着他马上要去当预备兵而结束，这样我就没有流畅的电脑玩游戏啦，也就可以静下心来写代码和看书。</p><p>中午婶婶来接弟弟回家，我们也去惹，应该是走之前吃点好东西，所以去饭店吃滴，妈的让我印象最深的菜就是一个鸭子，也许是鸭子太辣了，没吃多少，打包回他家晚上吃，我吃了一口，辣的我喝了一瓶冰啤酒，真下酒菜，喝的我脑袋晕乎乎的，还把喝酒的杯子打碎了，回家洗了个澡我还是有点困，但我又好像清醒了，所以开始写博客给自己找点事情做，打算暑假给自己一个充实的生活。然后我就把博客部署到码云上了，虽然还在实名认证审核中，不过我还是提前把链接放在这里，O (∩_∩) O, 这样不用翻墙就可以看到我的博客啦，但是配置文件放在一起会出现分支的问题，所以我简单粗暴地分了两个文件，一个 github 一个 gitee，这样虽然麻烦点，但问题好歹解决了 0.0 <span class="exturl" data-url="aHR0cHM6Ly9tcm5vYm9keTIzMy5naXRlZS5pby8=">（点我跳转）</span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;已经放暑假好多好多天了，在奶奶家已经放松过渡啦，电脑都积灰，《美丽新世界》也就看了三章，那我这些天在干什么捏，让我来回忆一下，回忆完了，就是玩，各种玩，困了就睡，起来就中午 12 点，下午拿我弟弟的电脑玩会儿 apex，晚上十点多饿了就和我堂弟去吃羊肉串，美好的日子随着他马</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>什么什么什么</title>
    <link href="http://mrnobody233.github.io/2022/06/19/%E4%BB%80%E4%B9%88%E4%BB%80%E4%B9%88%E4%BB%80%E4%B9%88/"/>
    <id>http://mrnobody233.github.io/2022/06/19/%E4%BB%80%E4%B9%88%E4%BB%80%E4%B9%88%E4%BB%80%E4%B9%88/</id>
    <published>2022-06-18T21:45:03.000Z</published>
    <updated>2022-08-25T11:23:16.455Z</updated>
    
    <content type="html"><![CDATA[<h3 id="通宵"><a class="markdownIt-Anchor" href="#通宵">#</a> 通宵</h3><p>也不能说是失眠吧，就是没那么困了，肚子也饿了，好久没吃早饭了，突然想起了奶奶家楼下的<span style="color:#DD4A48">猪血粉</span>，想着想着就开始行动了，不得不说，早上五点的小区空气还是非常不错的，走着走着发现了小猫咪，为了让它多靠近我一点，我伸出手蹲在那里好久，蚊子亲了我三口我都不知道，也许感动了上天，它喵喵了两声，然后慢慢等往我这边走，但保持在 1 米的距离。估计是看我没有吃的，不想被白嫖，最后我只拍了几张照片，然后发了已经积灰的 qq 相册里，站起来后它也对我开始有所警惕，离的更远了，既然这样那我还是去吃<span style="color:#DD4A48">猪血粉</span>吧，于是我骑着共享小电驴去我奶奶家楼下的<span style="color:#DD4A48">猪血粉</span>，终于吃到了，虽然味道没变，但我好像又没有那么饿，所以我现在是边吃边写的状态，那么就开始回忆一下其他的事情吧。</p><h3 id="代做"><a class="markdownIt-Anchor" href="#代做">#</a> 代做</h3><p>现在已经放假啦，压力减轻太多太多了，因为帮别人代做网页期末作业，已经精疲力尽了，好像赚了快 200 元了，自来水真的太可怕了，也有可能是我这里太便宜了，只要 20 块钱，所以他们同学之间相互推荐，ps 作业则是交给<span style="color:pink">果果超甜</span>去完成，也是 20 元，赚的也和我差不多一样多了，原本代做是想复习一下 HTML 和 CSS 的，但用的最多的的是 flex 布局，单子多了以后也懒得写了，直接摆烂，注册和登录页面直接换着用，改了一下背景图片和颜色，还有部分样式。到最后改都不想改了，直接去 github 上把一些看上去比较拉夸，像是大一新生能做出来的网页直接克隆下来然后稍微改一改就直接给他们，所以我领悟到了 git 的精髓，就是  <code>git clone</code>   嘿嘿～(￣▽￣～)~，后面又来了好多单，我实在不想做了，特别想玩 apex，所以用考试复习的理由拒绝了七单，也就是 140 块钱，然后开始玩派派，最后总结一下我帮他们做期末作业收获了什么</p><ol><li>提前感受到了工作的压力</li><li>提前了解了甲方所提的要求是多么离谱</li><li>如果下次还代做的话得涨价，涨 5 元，不行，25 太难听了，没办法只能 30 元啦，(º﹃º)。</li><li>不想做就不要勉强自己，趁早拒绝。</li></ol><h3 id="考试"><a class="markdownIt-Anchor" href="#考试">#</a> 考试</h3><p>考试的时候班上的同学才会团结在一起，学期末才会和前后学号的同学一起讨论下次的考试，每年都担心考试会不会挂科，每年都抄的满满的，今年也不例外，与前几个学期不同的是，老师监考严厉了许多，原因好像是有同学举报考试作弊到教育厅去了，如果有巡考老师发现有人作弊，那么监考老师会倒大霉，即使是这样，但是在同学的互帮互助下，除了只有 JAVA 编程基础乱写了好多题，其他的都没什么太大的问题，如果不挂科的话，我想争取一下奖学金，嘿嘿 (º﹃º)。</p><h3 id="摆烂"><a class="markdownIt-Anchor" href="#摆烂">#</a> 摆烂</h3><p>还有一件小事，就是在考试期间我基本都在玩 APEX，用屁男苟分守房区已经上白金段位，虽然现在已经掉了黄金，但是已经有满满的成就感，毕竟是轻薄本，已经没有太高的要求了。和<span style="color:#ccc">充电器</span>玩 CS GO 的时候，我的室友叫我帮他 PS 一下名字，要 P 四个名字，报酬是一瓶可乐，我想都没想，直接打开 ps，挂机帮他们 p，然后一个队友看我挂机，打了一下我的头，我也打，打着打着，在一局中我掏出了手轮，准备给他两枪头，然后我就因为伤害队友被踢出游戏了，嘿嘿，然后<span style="color:#ccc">充电器</span>掉了一个段位，直接破大防，好几天都不理我了。现在想想真是太对不起他啦，所以我决定官匹不摆烂玩，去完美平台摆烂，虽然我有时候摆烂战绩还是第一，但是还是不要和好朋友玩游戏的摆烂，不然我的队友会破防，我的敌人也会破大防，所以为了补偿他，我昨天去网吧陪他玩了好几局 csgo（我自己也想玩游戏），虽然都是平局，但是我玩的还是挺爽的，因为我最喜欢平局了，打的时间多，双方都精疲力尽，而我还是有整活的想法，哪一边心态先炸了哪一边就输了，我说的输是指心理上的输，哈哈哈。玩完回去的时候下的雨特别大，我骑着共享小电驴，到家的时候已经湿透了，实在是太爽了，就是不知道我现在熬夜了抵抗力会不会下降，然后出点小毛病。</p><h3 id="结束"><a class="markdownIt-Anchor" href="#结束">#</a> 结束</h3><p>写到现在，我已经躺在奶奶家的床上了，打扰老人家好像不太好，但我知道我爷爷早就起来了，既然我爷爷起来了，那我奶奶也起来了，所以我大胆的敲了门，我爷爷在猫眼盯了许久还是没看清我，问谁啊，认出我的声音以后立马就开了门，果然我爷爷已经醒来并出过门了，我也放心的和我爷爷奶奶打招呼，我奶奶以为我去网吧玩了一宿再过来，我解释是我睡不着觉又饿了才到楼下吃<span style="color:#DD4A48">猪血粉</span>，看来下次不能这样说，得说是我醒的太早了，我不希望家里人担心我。所以我以后还是好好想想怎么和他们说话吧，还有好多想写的，但我困困了，害怕原地去世，所以就酱紫，掰掰 (‘-ωก̀)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;通宵&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#通宵&quot;&gt;#&lt;/a&gt; 通宵&lt;/h3&gt;
&lt;p&gt;也不能说是失眠吧，就是没那么困了，肚子也饿了，好久没吃早饭了，突然想起了奶奶家楼下的&lt;span style=&quot;color:#DD4A48&quot;&gt;猪</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="生活" scheme="http://mrnobody233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vuex持久化</title>
    <link href="http://mrnobody233.github.io/2022/05/30/Vuex%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <id>http://mrnobody233.github.io/2022/05/30/Vuex%E6%8C%81%E4%B9%85%E5%8C%96/</id>
    <published>2022-05-30T12:54:17.000Z</published>
    <updated>2022-05-31T00:25:44.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vuex持久化"><a class="markdownIt-Anchor" href="#vuex持久化">#</a> vuex 持久化</h1><p>vuex 可以进行全局的状态管理，在开发的过程中，用户的各种信息（<strong>用户名</strong>，<strong>token</strong>，<strong>头像</strong>），需要 vuex 中存储，并且本地存储，我们可以安装一个 vuex 的插件 <code>vuex-persistedstate</code>  来支持 vuex 的状态持久化，免去自己存储的环节。</p><ol><li>安装 <code>vuex-persistedstate</code>  来支持 vuex 的状态持久化</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>npm i vuex<span class="token operator">-</span>persistedstate</pre></td></tr></tbody></table></figure><ol start="2"><li>在 <code>store/index.js</code>  中导入和配置</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>createStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>modulesA<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"@/store/modules/modulesA"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> createPersistedState <span class="token keyword">from</span> <span class="token string">'vuex-persistedstate'</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        modulesA</pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token comment">// 配置插件</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token function">createPersistedState</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment">// 本地存储的名字</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'demo-store'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token comment">// 指定需要存储的模块</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'modulesA'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token punctuation">]</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment">// 默认是存储到 localStorage</span></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vuex持久化&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#vuex持久化&quot;&gt;#&lt;/a&gt; vuex 持久化&lt;/h1&gt;
&lt;p&gt;vuex 可以进行全局的状态管理，在开发的过程中，用户的各种信息（&lt;strong&gt;用户名&lt;/strong&gt;，&lt;</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>平常的一天</title>
    <link href="http://mrnobody233.github.io/2022/05/27/%E5%B9%B3%E5%B8%B8%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
    <id>http://mrnobody233.github.io/2022/05/27/%E5%B9%B3%E5%B8%B8%E7%9A%84%E4%B8%80%E5%A4%A9/</id>
    <published>2022-05-27T15:32:09.000Z</published>
    <updated>2022-05-28T03:27:57.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="平常的一天"><a class="markdownIt-Anchor" href="#平常的一天">#</a> 平常的一天</h1><p>昨天几乎没有睡，也许是没有睡前看会儿书，又或者在思考今天的网站设计大赛该如何向老师们讲述，所以做了个奇奇怪怪的梦，也几乎没有睡好，梦的大致内容是：运行代码的过程中报错了，我的电脑下了一大堆乱七八糟的东西，各种杀毒软件，好在老师脾气好，让我一直跟着他，直到运行出来，结果跟着他到家了也没有运行好，大概就记得这些了，非常的奇怪。</p><p>早上十点醒来后就去了餐厅买点吃的，正面的一排店都黑着灯，有一股很难闻的味道，上楼后发现工作室没有电，问了下才知道这里餐厅着火了，所以楼下的大多店面没有开门。一点钟就要开始比赛了，我没有胃口，也许是害怕我上台讲话的时候吐出来，我紧张的时候就会有这种想法，我的心理还是没有想象的那么强大。比赛的地点是 s5-30, 到现场后只有一个老师一个学生，由于人数稍微有点多，所以分了组，但是我觉得不分组也无所谓，因为人来的太少了。</p><p>稍微等了一会儿就来了一些人，为了不浪费大家的时间，老师决定开始进行比赛，大部分参加比赛的都是大一的，只有我和另一组是大二的。所以他们做的实际上还不错，也许是自己的期末考试作品，只是用了简单的 html 和 css 来介绍自己的学校。第二组是古风，介绍古代诗人以及古典作品，这一组还不错，用 js 做了一个登录功能，好像故意打错了用户名来展示自己有这个功能。第三组就是我了，和我一起的有<span style="color:#49b1f5">ButterFlyFish</span>，<span style="color:#767676">废宅充电器</span>因为有课，或者只要有一个人陪我来就足够了，这样就我的紧张程度就会少很多，实际上在比赛的前半小时我还写了演讲稿，可以纪念一下。</p><details class="info"><summary>临时的演讲稿</summary><div><div class="tab" data-id="id3" data-title="临时的演讲稿"><pre><code>各位老师，大家好，我是来自20专软件4班的李昊，本次带来的作品是蓝色技术工作室宣传网站，使用Vue框架，（运行一下），在运行的过程中给老师们介绍一下SPA单页面应用程序，意思是所有的功能和交互都在这唯一的页面内完成，跳转到其他的页面不会刷新，缺点是如果数据太多开始加载网页的时候会慢，即使是这样也可以通过懒加载的方式来解决此问题，也就是需要的时候加载，不需要的时候不加载本作品使用了两个组件库，一个是vant，另一个是elementui，这两个组件库给我带来了极大的开发效率，所以实际上这个作品两天就可以完成。运行成功了，首页使用了element ui 中的对话框，提示同学们疫情注意安全，配合学校工作，还有vant组件中的导航栏，在导航栏中，左边的插槽放了一个工作室的会标，里面绑定了一个方法，就是返回上一级目录，由于现在的位置是首页，所以待会到活动页面的时候展示。即使是有组件库，也无法满足所有需求，所以自己封装了一个活动组件，由于宣传页面不需要过多的数据，所以我们编写了一个伪后台接收的代码，通过v-for循环来渲染和传参。当我们点击后就可以跳转到相应的页面。这个就是我们的活动页面，主要是展示社团的活动和参加的比赛，点击左上角的图标可以返回上一个路由，右边的菜单也可以，vant和element 中的抽屉和单元格相互使用。菜单内的链接也是可以跳转的，首先是小思同学，只有这个页面使用了ajax请求后台数据，这个后台数据并不是自己的，而是一个免费的机器人借口，使用v-model与表单相互绑定数据，点击按钮后发送ajax get 请求。接收到数据以后渲染页面</code></pre><p>由于技术不足，原本对话框也可以封装成组件来使用，但是会出现布局错误的问题，所以使用了 jquery 来渲染数据</p><p>介绍一下其他页面，介绍一下队友，感谢老师</p></div></div></details><p>但是我上台的时候还是没有介绍的很详细，因为有人中途进来打扰了我们，还有一个人把一个稍微会一点网页的老师叫了出去，留下一个不懂网页的老师，所以我没有很大的兴趣继续讲下去，很快便结束了这次答辩，下场时听到非常小声的完啦，之类的话，非常对不起大一的同学，这个键盘或者鼠标对我真的很重要，但是有一个老师出去了，没有看见我答辩的内容，所以我觉得我的分会很低，不过也没有关系了，收获的东西很多，提高了我讲废话的能力，</p><p>答辩完后紧张感已经消失，饥饿感也随之而来，在路上就点了塔斯丁汉堡，花了我 23 块钱，很好吃啊，但是份量很少，这种东西一直吃的话会很腻，所以我会隔很长一段时间吃，但是最近这个月我吃的次数还是很多</p><p>今天大概就发生了这些事，还有一个比较重要的就是我看完了《一九八四》，观后感就不谈了，也许会摘抄一下有意义的句子，所以我打算今天带《美丽新世界》回去看，路上，有意思的事情发生了，雨下的一般大，路口有一滩水，<span style="color:#ff8ea2">果果超甜</span>和<span style="color:#798db0">胃痛患者</span>说 ：“这怎么过去啊”，而我的脑回路就不一样了，嘴里边说着："垃圾才跳不过去" 这句话，边从左边跳过去，然后非常好玩啊，也就滑了一跤，把我的手机和《美丽新世界》弄了一点泥巴上去，我心疼的不是我的手机，而是书。然后他们三个，还有我，一路从我摔跤的地方，一直笑到回宿舍。除了他们还有一对小情侣也看见了，我没有觉得尴尬和社死，可能心疼书的情绪更大一些。</p><p>不过也挺好的，缓解了他们的压力，28 号，也就是明天挑战杯就要正式答辩了，我没有帮上什么忙，也帮不上什么忙，能让他们在比赛的前一天缓解压力，是我所做的最大贡献。</p><p>当我写完这些的时候已经零点一刻了，也到了我每年中算是比较重要的日子，也就是我的生日，放在这么后面说，是因为他们会看到我的博客，知道我的生日。其实我并不想让太多人知道我的生日，即使是我的好兄弟，好姐妹他们也会过几天才想起来，然后补给我一句生日快乐。我不希望他们知道我生日的原因是因为我不想祝别人生日快乐，记住日期真的很累，我本身就是记性差的人，其次就是我很讨厌挑选礼物，所以和我关系好的人，我会隔两年或者三年送一次，每次挑的礼物都花了很多心思。</p><p>今年的生日貌似比较重要，因为我家族这边到了这个年龄会办酒席，还好这次疫情，我也不想办，就打算请工作室的一些人吃吃饭好了，毕竟他们帮了我很多忙。在我印象中只有小学，我的父亲带来了蛋糕，让我和同学们一同分享，说实话现在回想还是很开心的，因为我班主任给我拍了照片，现在也能够看到当时羞涩的我。</p><p>最近有家人开始给我转钱，和我说生日快乐，我明白我的父母会在他们的子女过生日的时候还回去，即使是这样我也会记住有谁给了我，我也会付出我能做到的回报，当我以后更加有能力的时候会继续弥补回去，讲了这么多也该祝自己生日快乐了，往年都是看着时间一分一秒的到这时候，今天写博客忘我了，回过神来才发现已经到了我的生日。</p><p>每年这个时候我都会花比较多的钱钱来让自己开心一下，但是我已经忘了我送了什么，记忆中比较深刻的是小米的极客背包，直到现在它还在用，虽然已经破旧不堪，但也是满满的回忆，还有一个就是小米的降噪有线耳机，因为它过了几个月就坏了，我找客服换了一个新的，结果又坏了，所以印象非常深。今年的礼物是给自己画了个饼，当我拿了奖学金，专升本成功后，可以用奖学金的钱和存的一些钱来买一台好一点的游戏本，来玩 APEX 和其他游戏，还有就是弄双系统，尝试一下 Linux 系统。说到 APEX 我用我的轻薄本上了黄金，这个赛季非常艰辛啊，见人就得跑，还跑不过，打到一半还会有另一队来劝架，我玩游戏的目的是开心，所以上了黄金我已经满足了，之后就玩玩单排瓦尔基里快乐滋人吧。</p><p>发现看完了《一九八四》后我的说话方式正在慢慢的变化，兴许以后看了更多的书，我说话也会变得更加的优雅捏，嘿嘿，就这样，掰掰</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;平常的一天&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#平常的一天&quot;&gt;#&lt;/a&gt; 平常的一天&lt;/h1&gt;
&lt;p&gt;昨天几乎没有睡，也许是没有睡前看会儿书，又或者在思考今天的网站设计大赛该如何向老师们讲述，所以做了个奇奇怪怪的梦，也几乎没有</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
    <category term="周记" scheme="http://mrnobody233.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vue3-vuex</title>
    <link href="http://mrnobody233.github.io/2022/05/20/vue3-vuex/"/>
    <id>http://mrnobody233.github.io/2022/05/20/vue3-vuex/</id>
    <published>2022-05-20T13:09:52.000Z</published>
    <updated>2022-06-23T11:56:52.389Z</updated>
    
    <content type="html"><![CDATA[<p>与 vue2 中使用方式类似，复习一下下</p><h1 id="state"><a class="markdownIt-Anchor" href="#state">#</a> state</h1><p>state 提供位移的公共数据源，所有共享的数据都要统一放到 Store 的 State 中进行存储</p><p>在 state 中定义一个数据</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p><strong>使用方法</strong></p><p>1. 直接使用</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>姓名：<span class="token punctuation">{</span> $store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>username <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><p>2. 通过 vuex 仓库获取数据</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 导入</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 使用 vuex 仓库</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><h1 id="getters"><a class="markdownIt-Anchor" href="#getters">#</a> getters</h1><p>用于对 Store 中的数据进行加工处理形成新的数据，类似 vue 中的计算属性</p><p>定义一个方法</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token function">newName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">'!!!'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p><strong>使用方法</strong></p><ol><li>直接使用</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>姓名：<span class="token punctuation">{</span> $store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>newName <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><ol start="2"><li>从 vuex 仓库中获取数据</li></ol><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 使用 vuex 仓库</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token comment">// 获取 getters 数据</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>newName<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h1 id="mutations"><a class="markdownIt-Anchor" href="#mutations">#</a> mutations</h1><p>Mutation 用于变更 Store 中的数据。</p><ul><li>只能通过 mutation 变更 Store 数据，不可以直接操作 Store 中的数据</li><li>通过这种方式虽然操作起来繁琐一些，但是可以集中监控所有数据的变化</li></ul><p>在 mutation 中定义一个函数</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token function">newName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">'!!!'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      state<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">'ls'</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p><strong>使用方法  <code>store.commit('')</code> </strong></p><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">&lt;!-- 1. 使用根模块 state 的数据 --&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>姓名：{ $store.state.username }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token comment">&lt;!-- 2. 使用根模块的 getters 的数据 --&gt;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>姓名：{ $store.getters.newName }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateName<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>更改姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></pre></td></tr></tbody></table></figure><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 使用 vuex 仓库</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">const</span> <span class="token function-variable function">updateName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token operator">|</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token operator">|</span> store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'updateName'</span><span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token operator">|</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">return</span> <span class="token punctuation">{</span> updateName <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h1 id="action"><a class="markdownIt-Anchor" href="#action">#</a> Action</h1><p>Action 用于处理异步任务</p><p>如果通过异步操作变更数据，必须通过 Action，而不能使用 Mutation，但是在 Action 中还是要通过触发 mutation 的方式间接变更数据。</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token function">newName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">'!!!'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      state<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">'ls'</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'updateName'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="23"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="24"></td><td><pre>  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="25"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p><strong>使用方法  <code>store.dispath('mutation中的方法')</code> </strong></p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'app'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">// 使用 vuex 仓库</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">const</span> <span class="token function-variable function">updateName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token comment">// 调用 actions 函数</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'updateName'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">return</span> <span class="token punctuation">{</span> updateName <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h1 id="modules"><a class="markdownIt-Anchor" href="#modules">#</a> modules</h1><p>由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。</p><p>为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块 —— 从上至下进行同样方式的分割</p><p><strong>存在两种情况</strong></p><ul><li>默认的模块，除了 <code>state</code>  区分模块，需要使用 <code>{ $store.state.modulesA.username }</code>  来获取，其他 <code>getters</code> , <code>mutations</code> , <code>actions</code>  都在全局。</li><li>带命名空间 <code>namespaced:true</code>  的模块，所有功能区分模块，更高封装度和复用</li></ul><h2 id="简略一些"><a class="markdownIt-Anchor" href="#简略一些">#</a> 简略一些</h2><p>好像是挺简单的，可以复杂一点，但是看得更加清晰，那么开始吧</p><ul><li>在 store 文件下新建一个 modules，然后下面新建一个 modulesA</li><li>在里面写点啥，然后导出去</li></ul><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// A 模块</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">const</span> modulesA <span class="token operator">=</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure><p>再 <code>index.js</code>  中导入 <code>modulesA</code></p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>createStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>modulesA<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./modules/modulesA'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        modulesA<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><p>接着就可以开始使用了</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">// 使用 A 模块的 state 数据</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>modulesA<span class="token punctuation">.</span>username <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure><h2 id="开启命名空间"><a class="markdownIt-Anchor" href="#开启命名空间">#</a> 开启命名空间</h2><p>可以通过添加  <code>namespaced: true</code>  的方式使其成为带命名空间的模块。当模块被注册后，它的所有 <strong>getter</strong>、<strong>action</strong> 及 <strong>mutation</strong> 都会自动根据模块注册的路径调整命名</p><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>createStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>modulesA<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./modules/modulesA'</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">const</span> modulesB <span class="token operator">=</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token comment">// 开启命名空间</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token literal-property property">namespaced</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'李昊'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token function">newName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token keyword">return</span> state<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">'！！！'</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            state<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">'木子日天'</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">}</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'updateName'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        </pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        modulesA<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        modulesB<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><h3 id="使用方式"><a class="markdownIt-Anchor" href="#使用方式">#</a> 使用方式</h3><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>使用<span class="token constant">B</span>模块中的state数据<span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>modulesB<span class="token punctuation">.</span>username <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>使用<span class="token constant">B</span>模块中的getters数据<span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span><span class="token string">"modulesB/newName"</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>使用<span class="token constant">B</span>模块中的Mutations更改数据<span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"updateName"</span><span class="token operator">&gt;</span>点击更改<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>使用<span class="token constant">B</span>模块中的actions延时更改数据<span class="token operator">--</span><span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"asyncChangeName"</span><span class="token operator">&gt;</span>延时更改<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">import</span> <span class="token punctuation">{</span>useStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vuex"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="21"></td><td><pre>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="22"></td><td><pre>  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">const</span> <span class="token function-variable function">updateName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="26"></td><td><pre>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'触发事件'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>      store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"modulesB/updateName"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">const</span> <span class="token function-variable function">asyncChangeName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="31"></td><td><pre>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'触发延时更改数据'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>      store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'modulesB/updateName'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token keyword">return</span> <span class="token punctuation">{</span>store<span class="token punctuation">,</span> updateName<span class="token punctuation">,</span> asyncChangeName<span class="token punctuation">}</span></pre></td></tr><tr><td data-num="35"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token punctuation">}</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;与 vue2 中使用方式类似，复习一下下&lt;/p&gt;
&lt;h1 id=&quot;state&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#state&quot;&gt;#&lt;/a&gt; state&lt;/h1&gt;
&lt;p&gt;state 提供位移的公共数据源，所有共享的数据都要统一放到 Sto</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>待办事项</title>
    <link href="http://mrnobody233.github.io/2022/05/17/%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/"/>
    <id>http://mrnobody233.github.io/2022/05/17/%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9/</id>
    <published>2022-05-17T05:32:01.000Z</published>
    <updated>2022-10-23T04:04:18.289Z</updated>
    
    <content type="html"><![CDATA[<h1 class="rainbow" id="待办事项"><a class="markdownIt-Anchor" href="#待办事项">#</a> 待办事项</h1><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> 看完《美丽新世界》</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" disabled="true"><label for="cbx_1"> 看完《百年孤独》</label></li><li class="task-list-item"><input type="checkbox" id="cbx_2" disabled="true"><label for="cbx_2"> 看完《我们》</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" disabled="true"><label for="cbx_3"> 看完《九型人格》</label></li><li class="task-list-item"><input type="checkbox" id="cbx_4" disabled="true"><label for="cbx_4"> 小兔鲜儿</label></li><li class="task-list-item"><input type="checkbox" id="cbx_5" disabled="true"><label for="cbx_5"> 黑马程序员电商</label></li></ul><h1 class="pink" id="已完成"><a class="markdownIt-Anchor" href="#已完成">#</a> 已完成</h1><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_6" checked="true" disabled="true"><label for="cbx_6"> 微信小程序</label></li><li class="task-list-item"><input type="checkbox" id="cbx_7" checked="true" disabled="true"><label for="cbx_7"> 看完《一九八四》</label></li><li class="task-list-item"><input type="checkbox" id="cbx_8" checked="true" disabled="true"><label for="cbx_8"> 复习 vuex 基础和 modules</label></li><li class="task-list-item"><input type="checkbox" id="cbx_9" checked="true" disabled="true"><label for="cbx_9"> vuex 持久化</label></li></ul><!-- - [ ] 这是一个小叉叉- [x] 这是一个红色勾勾{.danger}- [ ] 未完成- [x] 完成{.primary}- [ ] 未完成- [x] 默认颜色 -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 class=&quot;rainbow&quot; id=&quot;待办事项&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#待办事项&quot;&gt;#&lt;/a&gt; 待办事项&lt;/h1&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;i</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="待办" scheme="http://mrnobody233.github.io/tags/%E5%BE%85%E5%8A%9E/"/>
    
  </entry>
  
  <entry>
    <title>axios封装</title>
    <link href="http://mrnobody233.github.io/2022/05/11/axios%E5%B0%81%E8%A3%85/"/>
    <id>http://mrnobody233.github.io/2022/05/11/axios%E5%B0%81%E8%A3%85/</id>
    <published>2022-05-11T05:29:38.000Z</published>
    <updated>2022-05-17T06:05:23.107Z</updated>
    
    <content type="html"><![CDATA[<h1>安装axios</h1><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>npm i axios</pre></td></tr></tbody></table></figure><h1>新建 " src/utils/request.js "模块，代码如下</h1><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">// 3.1 剥离无效数据  3.2 处理 token 失效</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">// 4. 导出一个函数，调用当前的 axios 实例发请求，返回值 promise</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 导入 axios</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// 导入 vuex 仓库</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">// 导入路由</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'@/router'</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">// 导出 baseURL, 原因：其他地方不是通过 axios 发请求的地方用上基准地址</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">const</span> baseURL <span class="token operator">=</span> <span class="token string">'地址'</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">// 1. 创建一个新的 axios 实例</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token comment">//axios 的一些配置，baseURL timeout</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  baseUrl<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token literal-property property">timeout</span><span class="token operator">:</span><span class="token number">5000</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token comment">// 2. 请求拦截器，如果有 token 进行头部携带</span></pre></td></tr><tr><td data-num="22"></td><td><pre>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="23"></td><td><pre>  <span class="token comment">// 拦截业务逻辑</span></pre></td></tr><tr><td data-num="24"></td><td><pre>  <span class="token comment">// 进行请求配置的修改</span></pre></td></tr><tr><td data-num="25"></td><td><pre>  <span class="token comment">// 如果本地有 token 就在头部携带</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>  <span class="token comment">// 2.1 获取用户信息对象</span></pre></td></tr><tr><td data-num="28"></td><td><pre>  <span class="token keyword">const</span> <span class="token punctuation">{</span> profile <span class="token punctuation">}</span> <span class="token operator">=</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user</pre></td></tr><tr><td data-num="29"></td><td><pre>  <span class="token comment">// 2.2 判断是否有 token</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">if</span> <span class="token punctuation">(</span>profile<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token comment">// 2.3 设置 token</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>profile<span class="token punctuation">.</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="35"></td><td><pre>  <span class="token comment">// 将错误对象传递进去</span></pre></td></tr><tr><td data-num="36"></td><td><pre>  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token comment">// 3 响应拦截器：</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token comment">// 3.1 剥离无效数据：res=&gt;res.data 取出 data 数据，将来调用接口的时候直接拿到的就是后台的数据</span></pre></td></tr><tr><td data-num="41"></td><td><pre>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="42"></td><td><pre>  <span class="token comment">// 401 状态码，进入该函数</span></pre></td></tr><tr><td data-num="43"></td><td><pre>  <span class="token comment">// 3.2 处理无效 token</span></pre></td></tr><tr><td data-num="44"></td><td><pre>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>response <span class="token operator">&amp;&amp;</span> err<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token comment">// 3.2.1 清空无效用户信息</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'user/setUser'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="47"></td><td><pre>    <span class="token comment">// 3.2.2 跳转到登录页面</span></pre></td></tr><tr><td data-num="48"></td><td><pre>      router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token comment">// 3.2.3 跳转需要传参 (当前路由地址) 给登录码</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token keyword">const</span> fullPath <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span>currentRoute<span class="token punctuation">.</span>value<span class="token punctuation">.</span>fullPath<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token comment">//encodeURIComponent 转换 uri 编码，防止解析地址出问题</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login?redirectUrl='</span> <span class="token operator">+</span> fullPath<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="53"></td><td><pre>  <span class="token punctuation">}</span></pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token comment">// 请求工具函数</span></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> method<span class="token punctuation">,</span> submitData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></pre></td></tr><tr><td data-num="61"></td><td><pre>  <span class="token comment">// 负责发请求：请求地址，请求方式，提交的数据</span></pre></td></tr><tr><td data-num="62"></td><td><pre>  <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    url<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="64"></td><td><pre>    method<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="65"></td><td><pre>    <span class="token comment">// 1. 如果是 get 请求  需要使用 params 来传递 submitData   ?a=10&amp;c=10</span></pre></td></tr><tr><td data-num="66"></td><td><pre>    <span class="token comment">// 2. 如果不是 get 请求  需要使用 data 来传递 submitData   请求体传参</span></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token comment">// [] 设置一个动态的 key, 写 js 表达式，js 表达式的执行结果当作 KEY</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token comment">//method 参数：get,Get,GET  转换成小写再来判断</span></pre></td></tr><tr><td data-num="69"></td><td><pre>    <span class="token comment">// 在对象，['params']:submitData ===== params:submitData 这样理解</span></pre></td></tr><tr><td data-num="70"></td><td><pre>    <span class="token punctuation">[</span>method<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'get'</span> <span class="token operator">?</span> <span class="token string">'params'</span> <span class="token operator">:</span> <span class="token string">'data'</span><span class="token punctuation">]</span><span class="token operator">:</span> submitData</pre></td></tr><tr><td data-num="71"></td><td><pre>  <span class="token punctuation">}</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token punctuation">}</span></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;安装axios&lt;/h1&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption data-lang=&quot;JavaScript&quot;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td data-num=&quot;1&quot;&gt;&lt;/td&gt;&lt;td&gt;&lt;p</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Ajax" scheme="http://mrnobody233.github.io/tags/Ajax/"/>
    
  </entry>
  
</feed>
