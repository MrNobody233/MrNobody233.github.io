<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrNobody&#39;s Blog</title>
  
  <subtitle>保持呼吸 不要断气</subtitle>
  <link href="http://mrnobody233.github.io/atom.xml" rel="self"/>
  
  <link href="http://mrnobody233.github.io/"/>
  <updated>2022-04-05T14:02:52.893Z</updated>
  <id>http://mrnobody233.github.io/</id>
  
  <author>
    <name>Mr_Nobody</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue路由</title>
    <link href="http://mrnobody233.github.io/2022/04/05/Vue%E8%B7%AF%E7%94%B1/"/>
    <id>http://mrnobody233.github.io/2022/04/05/Vue%E8%B7%AF%E7%94%B1/</id>
    <published>2022-04-05T12:14:46.000Z</published>
    <updated>2022-04-05T14:02:52.893Z</updated>
    
    <content type="html"><![CDATA[<p><span style="color:red"></span></p><h1 id="Vue路由"><a href="#Vue路由" class="headerlink" title="Vue路由"></a>Vue路由</h1><p>路由就是<span style="color:red">Hash地址</span>与<span style="color:red">组件</span>之间的对应关系</p><h2 id="前端路由的工作方式"><a href="#前端路由的工作方式" class="headerlink" title="前端路由的工作方式"></a>前端路由的工作方式</h2><ol><li>用户<span style="color:red">点击</span>页面上的<span style="color:red">路由连接</span></li><li>导致了<span style="color:red">Url地址栏</span>中<span style="color:red">Hash</span>值发生了变化</li><li>前端路由<span style="color:red">监听到了Hash地址的变化</span></li><li>前端路由把当前<span style="color:red">Hash地址对应的组件</span>渲染到浏览器中</li></ol><p>结论：前端路由，指的是<span style="color:red">Hash 地址</span>与<span style="color:red">组件之间</span>的<span style="color:red">对应关系</span></p><h3 id="Vue-router"><a href="#Vue-router" class="headerlink" title="Vue-router"></a>Vue-router</h3><p><span style="color:red">Vue-router</span>是vue.js官方给出的<span style="color:red">路由解决方案</span>。它只能结合vue项目进行使用，能够轻松的管理SPA项目中组件的切换</p><ul><li>vue-router 3.x 只能结合<span style="color:red">vue2</span>进行使用</li><li>vue-router 4.x 只能结合<span style="color:red">vue3</span>进行使用</li></ul><h4 id="vue-router-的基本使用步骤"><a href="#vue-router-的基本使用步骤" class="headerlink" title="vue-router 的基本使用步骤"></a>vue-router 的基本使用步骤</h4><h5 id="声明路由链接和占位符"><a href="#声明路由链接和占位符" class="headerlink" title="声明路由链接和占位符"></a>声明<span style="color:red">路由链接</span>和<span style="color:red">占位符</span></h5><p>可以使用<code>&lt;router-link&gt;</code>标签来声明路由链接，并使用<code>&lt;router-view&gt;</code>标签来声明路由占位符</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>App组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明路由连接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/home"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/movie"</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h5 id="在router-x2F-main-js中导入-并注册组件"><a href="#在router-x2F-main-js中导入-并注册组件" class="headerlink" title="在router/main.js中导入 并注册组件"></a>在router/main.js中导入 并注册组件</h5> <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入需要被展示的组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">"@/views/Home.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">"@/views/About.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Movie</span> <span class="keyword">from</span> <span class="string">"@/views/Movie.vue"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  <span class="comment">// path 是hash地址 component 是要展示的组件</span></span><br><span class="line">    {<span class="attr">path</span>: <span class="string">'/home'</span>, <span class="attr">component</span>: <span class="title class_">Home</span>},</span><br><span class="line">    {<span class="attr">path</span>: <span class="string">'/about'</span>, <span class="attr">component</span>: <span class="title class_">About</span>},</span><br><span class="line">    {<span class="attr">path</span>: <span class="string">'/movie'</span>, <span class="attr">component</span>: <span class="title class_">Movie</span>}</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="路由重定向"><a href="#路由重定向" class="headerlink" title="路由重定向"></a>路由重定向</h4><p>指的是：用户在访问<span style="color:red">地址A</span>的时候，<span style="color:red">强制用户跳转</span>到地址C，从而展示特定的组件页面</p><p>用法十分简单 通过路由规则的 <span style="color:red">redirect</span>属性，指定一个新的路由地址，可以很方便的设置路由的重定向</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line"><span class="comment">// path 表示需要被重定向的“原地址”，redirect表示将要被重定向到的“新地址”</span></span><br><span class="line">    {<span class="attr">path</span>: <span class="string">'/'</span>, <span class="attr">redirect</span>: <span class="string">'/home'</span>},</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><h4 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h4><p>通过路由实现<span style="color:red">组件的嵌套展示</span>，叫做嵌套路由</p><p>明天先今天水博客</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;Vue路由&quot;&gt;&lt;a href=&quot;#Vue路由&quot; class=&quot;headerlink&quot; title=&quot;Vue路由&quot;&gt;&lt;/a&gt;Vue路由&lt;/h1&gt;&lt;p&gt;路由就是&lt;span style=&quot;co</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue-ref引用-作用域插槽</title>
    <link href="http://mrnobody233.github.io/2022/04/03/Vue-ref%E5%BC%95%E7%94%A8-%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD/"/>
    <id>http://mrnobody233.github.io/2022/04/03/Vue-ref%E5%BC%95%E7%94%A8-%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD/</id>
    <published>2022-04-03T06:21:20.000Z</published>
    <updated>2022-04-03T12:21:05.710Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ref引用"><a href="#ref引用" class="headerlink" title="ref引用"></a>ref引用</h3><p>ref用来辅助开发者在<span style="color:red">不依赖jQuery的情况下</span>，获取DOM元素或组件的引用</p><p>每个vue的组件实例上，都包含一个<span style="color:red"><code>$refs</code>对象</span>，里面存储着对应的DOM元素或组件的引用。默认情况下，<span style="color:red">组件的<code>$ref</code>指向一个空对象</span>。</p><h4 id="使用-ref-引用-DOM-元素"><a href="#使用-ref-引用-DOM-元素" class="headerlink" title="使用 ref 引用 DOM 元素"></a>使用 ref 引用 DOM 元素</h4><ul><li><p>使用ref属性 为对应的DOM添加引用名称</p>  <figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">ref</span>=<span class="string">"myh1"</span>&gt;</span>App根组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>通过 <code>this.$refs.myh1</code>可以获取到DOM元素的引用</p></li><li><p>操作DOM元素把文本颜色改为红色</p>  <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">myh1</span>.<span class="property">style</span>.<span class="property">color</span>=<span class="string">'red'</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="使用-ref-引用-组件-实例"><a href="#使用-ref-引用-组件-实例" class="headerlink" title="使用 ref 引用 组件 实例"></a>使用 ref 引用 组件 实例</h4><ul><li><p>使用ref属性 为相对应的组件添加引用名称</p>  <figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Counter</span> <span class="attr">ref</span>=<span class="string">"counterRef"</span>&gt;</span><span class="tag">&lt;/<span class="name">Counter</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>通过 <code>this.$refs.counterRef</code>可以引用组件的实例</p></li><li><p>引用到组件的实例之后，就可以调用组件上的 methods 方法</p>  <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">counterRef</span>.<span class="title function_">reset</span>()</span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="this-nextTick-cb-方法"><a href="#this-nextTick-cb-方法" class="headerlink" title="this.$nextTick(cb)方法"></a>this.$nextTick(cb)方法</h4><p>  组件的$nextTick(cb)方法，会把cb回调推迟到下一个DOM更新周期之后执行，大概意思就是，等组件的DOM异步的重新渲染完成后，再执行cb回调函数，从而保证cb回调函数可以操作到最新的DOM元素。</p>  <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$nextTick(<span class="function">()=&gt;</span>{</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">ipt</span>.<span class="title function_">focus</span>()</span><br><span class="line">})  </span><br></pre></td></tr></tbody></table></figure><hr><h3 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h3><p><span style="color:red">插槽(Slot)</span>是vue为<span style="color:red">组件封装者</span>提供的能力。允许开发者在封装组件时，把<span style="color:red">不确定的，希望用户指定的部分</span>定义为插槽。</p><p>可以把插槽认为是组件封装期间，为用户预留的<span style="color:red">内容的占位符</span></p><h4 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h4><p>在封装组件时，可以通过<code>&lt;slot&gt;</code>元素<span style="color:red">定义插槽</span>，从而<span style="color:red">为用户预留内容占位符</span></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"com-container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>MyCom组件--基本用法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 通过slot标签 为用户预留内容占位符(插槽) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>最后一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>用户在使用组件期间 为插槽指定具体内容</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">MyCom</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 在使用组件时，为插槽指定具体的内容 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>---用户自定义的内容---<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">MyCom</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="默认内容"><a href="#默认内容" class="headerlink" title="默认内容"></a>默认内容</h4><p>封装组件，可以为预留的<code>&lt;slot&gt;</code>插槽提供<span style="color:red">默认内容</span>。如果组件的使用者没有为插槽提供任何内容，则默认内容会生效</p><p>使用方式特别简单，在标签内写上默认内容即可</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"com-container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>MyCom组件--基本用法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span>这是默认内容<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>最后一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h4><p>如果在封装组件时<span style="color:red">需要预留多个插槽节点</span>，则需要为每个<code>&lt;slot&gt;</code>插槽指定<span style="color:red">具体的 name 名称</span>。这种<span style="color:red">带有具体名称的插槽</span>叫做”具名插槽”</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"com-container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>MyCom组件--基本用法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>在向具名插槽提供内容的时候，我们可以在<code>&lt;template&gt;</code>元素上使用<span style="color:red">v-slot</span>,并以v-slot的参数形式提供其名称</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">MyCom</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:title</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>鹅鹅鹅<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:user</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>李白<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">MyCom</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p> 具名插槽可以简写，(<span style="color:red">v-slot:</span>)替换为字符<span style="color:red">#</span>。例如 <code>v-slot:header</code>可以被重写为<code>#header</code></p><h4 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h4><p>在封装组件的过程中，可以为预留的<code>&lt;slot&gt;</code>插槽绑定props数据，这种<span style="color:red">带有props数据的<code>&lt;slot&gt;</code></span>就是作用域插槽</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"com-container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>MyCom组件--作用域插槽<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:info</span>=<span class="string">"userInfo"</span> <span class="attr">:msg</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>v-slot:default=”任意合法名” 一般使用scope 接收 接着可以使用插值表达式渲染出来</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">MyCom</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">p</span>&gt;</span>{{ scope.info.name }}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">MyCom</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;ref引用&quot;&gt;&lt;a href=&quot;#ref引用&quot; class=&quot;headerlink&quot; title=&quot;ref引用&quot;&gt;&lt;/a&gt;ref引用&lt;/h3&gt;&lt;p&gt;ref用来辅助开发者在&lt;span style=&quot;color:red&quot;&gt;不依赖jQuery的情况下&lt;/span&gt;，获取</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Markor</title>
    <link href="http://mrnobody233.github.io/2022/04/02/Markor/"/>
    <id>http://mrnobody233.github.io/2022/04/02/Markor/</id>
    <published>2022-04-02T03:57:05.000Z</published>
    <updated>2022-04-02T03:57:52.272Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Markor"><a href="#Markor" class="headerlink" title="Markor"></a>Markor</h3><p>最近想了一小问题，就是学校解封以后，如果我回家的话基本上是不会碰电脑的，虽然我会把电脑一起带回去，但是基本上都没有打开过，可能是我觉得带着有重量感，不对，是害怕我的github没有保持日常提交代码，所以为了避免这个情况，我可以使用平板来写文档，虽然提交不上去，但是回宿舍以后，我也可以躺在床上用平板来写一写自己想写的东西，这样有挺多好处的，可以避免我在床上玩手机，这样就可以玩平板了，哈哈哈哈哈，为什么想要用平板来写文档呢，写博客什么的都不是最主要的，最重要的是让我的平板键盘能有用武之地，我已经太久没有用我的平板键盘了，一直放在抽屉里积灰，这东西花了我600RMB，我也不知道当时我怎么想的，会买这么贵的东西。</p><p>好吧我突然想起来了，在我没有买显示器之前，平板一直是我的副屏，多亏了华为的多屏协同，能帮我省很多事，虽然延迟还是有一小丢丢，但是日常使用还是很给力的，即使是这样还是有缺点的，就是字太小了，我眼睛很好，但是一直看着这么小的字也是会很难受的，所以我买了显示器，果然大屏就是爽，立马抛弃了我的小平板，只用它来记笔记，我们三个一直相处的很好，直到有一天！！！我会写博客了，我为什么不把笔记写在博客里呢，所以我再次抛弃了我的平板，没有考虑平板的感受，呜呜，果然是买前生产力，买后哔哩哔哩，盖泡面，当手托，摸鱼。所以为了改变现状，我可以使用<strong>Markor</strong>来满足自己突然想写博客的欲望，这一篇博客就是使用Markor来写的，还挺像回事，如果找到更好的软件我还是会替代Markor的，哈哈哈哈哈哈，这样我的平板就不会失宠了。</p><p>日常水博客，就酱紫，拜拜。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Markor&quot;&gt;&lt;a href=&quot;#Markor&quot; class=&quot;headerlink&quot; title=&quot;Markor&quot;&gt;&lt;/a&gt;Markor&lt;/h3&gt;&lt;p&gt;最近想了一小问题，就是学校解封以后，如果我回家的话基本上是不会碰电脑的，虽然我会把电脑一起带回去，但是基本上</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>熬夜之旅</title>
    <link href="http://mrnobody233.github.io/2022/04/01/%E7%86%AC%E5%A4%9C%E4%B9%8B%E6%97%85/"/>
    <id>http://mrnobody233.github.io/2022/04/01/%E7%86%AC%E5%A4%9C%E4%B9%8B%E6%97%85/</id>
    <published>2022-04-01T15:18:55.000Z</published>
    <updated>2022-04-01T16:03:25.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="熬夜之旅"><a href="#熬夜之旅" class="headerlink" title="熬夜之旅"></a>熬夜之旅</h3><p>  今天在工作室度过第一个夜晚，虽然在暑假比赛的时候已经住过另一个工作室了，但是这里还是头一次，和我一起的有<a href="https://charet.github.io/">社恐废宅充电器</a>和<a href="https://thirsty-c.github.io/">胃病患者</a>，比起宿舍我确实更喜欢这里，毕竟这里不需要交<span style="color:red">电费</span>和<span style="color:red">水费</span>，最主要的是还有空调可以吹，虽然室友都有比较好的作息时间，但在其他时间还是比较吵的，串门的比较多，所以非常感谢有这么好的环境提供给我学习和休息，今晚如果没有SB抢我的折叠床，我应该会睡的比较早。</p><h3 id="其他的事"><a href="#其他的事" class="headerlink" title="其他的事"></a>其他的事</h3><p>  凌晨两点半的时候，有一个网友突然发现了我，她问我是谁，毕竟隔了四五年了，不记得我是谁也很正常，所以我稍微和她解释了一下，这样体现了给人写备注的好处。这个姑娘的也挺悲催的，所以我对她印象挺深刻，她和父母关系不好，有自残倾向，到了现在和她聊了一会，她告诉我在今年，也就是她的18岁那天，她<span style="color:red">自杀未遂</span>，但是和父母关系好了一些，她说她重生了，我为她感到高兴，但也不敢问的太仔细，虽然她貌似想向我分享那些事情，但我还是把话题给往其他地方给放了，认识她是在一个仓鼠群里，我以前养过仓鼠，和她聊得比较好所以她加了我，并且告诉我她家里的一些事，当时我并不会安慰人，只是默默听着，让她有一个地方可以宣泄自己的压力，虽然现在也是一样，我还是不会安慰人，能感受的到别人悲伤的情绪，但也不会说什么，还可能会逃避。</p><p>  扯多了，她问我怕蛇吗，我没回答，只是问她现在开始养蛇了嘛，和仓鼠放在一起不会出事吗，以及蛇没有咬过你吗，她说没有，倒是很想被咬一下试试，所以一不小心又回到了自残的话题，说自己又开始抽起了烟，本以为能缓解压力，结果压力更大了，每天晚上睡眠时间只有5小时，离她想上的大学平均分还差2分，也就是每科需要进步十分，我不敢多聊，因为太晚了，已经快凌晨3点了，所以告诉她生活的美好，以及还有很多没有碰到过的有意思的事情之类的，接着就睡了。</p><p>  其实像这样的网友还有很多，以前聊的特别欢乐，突然有一天就没继续下去，也不知道是什么时候结束，但还是保存在自己的联系人里，默默的看着他们的变化，也是一种属于我自己的乐趣，</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>注意身体，不要熬夜现在是2022年4月2日00:00:57，虽然标题是熬夜之旅，实际上是我想不出标题的名字而已，就酱紫，如果我再不睡，我的折叠床就要被傻逼玷污了！就酱紫，掰掰。还有一件事，这个标签是自言自语，看看就行了，全当我放屁，掰掰。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;熬夜之旅&quot;&gt;&lt;a href=&quot;#熬夜之旅&quot; class=&quot;headerlink&quot; title=&quot;熬夜之旅&quot;&gt;&lt;/a&gt;熬夜之旅&lt;/h3&gt;&lt;p&gt;  今天在工作室度过第一个夜晚，虽然在暑假比赛的时候已经住过另一个工作室了，但是这里还是头一次，和我一起的有&lt;a href=</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>Vue组件和props</title>
    <link href="http://mrnobody233.github.io/2022/04/01/Vue%E7%BB%84%E4%BB%B6%E5%92%8Cprops/"/>
    <id>http://mrnobody233.github.io/2022/04/01/Vue%E7%BB%84%E4%BB%B6%E5%92%8Cprops/</id>
    <published>2022-04-01T06:50:11.000Z</published>
    <updated>2022-04-03T08:07:17.211Z</updated>
    
    <content type="html"><![CDATA[<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><p>组件之间可以相互引用，首先得<span style="color:red">注册后使用<span></span></span></p><h4 id="如何注册"><a href="#如何注册" class="headerlink" title="如何注册"></a>如何注册</h4><p>注册组件的方式分为两种，<span style="color:red">全局注册</span> 和 <span style="color:red">局部注册</span></p><ul><li>被全局注册的组件，<span style="color:red">可以在全局任何一个组件内使用/<span></span></span></li><li>被局部注册的组件，<span style="color:red">只能在当前注册的范围内使用</span></li></ul><h5 id="全局注册组件"><a href="#全局注册组件" class="headerlink" title="全局注册组件"></a>全局注册组件</h5><ol><li>在main.js 中导入需要被<span style="color:red">全局注册</span> 的组件   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Count</span> <span class="keyword">from</span> <span class="string">"@/components/Count.vue"</span>;</span><br></pre></td></tr></tbody></table></figure></li><li>调用Vue.component()方法全局注册组件   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">'Count'</span>, <span class="title class_">Count</span>)</span><br></pre></td></tr></tbody></table></figure></li><li>在app组件中使用Count组件   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Count</span>&gt;&lt;/<span class="title class_">Count</span>&gt;</span><br></pre></td></tr></tbody></table></figure></li></ol><hr><h5 id="局部注册组件"><a href="#局部注册组件" class="headerlink" title="局部注册组件"></a>局部注册组件</h5><ol><li>在app.vue中导入需要被<span style="color:red">局部注册</span>的组件   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Count</span> <span class="keyword">from</span> <span class="string">"@/components/Count.vue"</span>;</span><br></pre></td></tr></tbody></table></figure></li><li>在components节点下通过键值对的方式注册组件   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">components</span>: {</span><br><span class="line"> <span class="string">'Count'</span>: <span class="title class_">Count</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li>在app组件中使用Count组件   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Count</span>&gt;&lt;/<span class="title class_">Count</span>&gt;</span><br></pre></td></tr></tbody></table></figure></li></ol><h5 id="全局注册和局部注册的区别"><a href="#全局注册和局部注册的区别" class="headerlink" title="全局注册和局部注册的区别"></a>全局注册和局部注册的区别</h5><ul><li>被全局注册的组件，可以在全局任何一个组件内使用</li><li>被局部注册的组件，只能在当前注册的方位内使用</li></ul><hr><h3 id="组件的props"><a href="#组件的props" class="headerlink" title="组件的props"></a>组件的props</h3><p>props是组件的<span style="color:red">自定义属性</span>，组件的使用者可以通过props<span style="color:red">把数据传递到子组件内部</span>，供子组件内部进行使用。</p><ul><li>作用：父组件通过props<span style="color:red">向子组件传递要展示的数据</span></li><li>好处：提高了组件的<span style="color:red">复用性</span></li></ul><h4 id="如何声明props"><a href="#如何声明props" class="headerlink" title="如何声明props"></a>如何声明props</h4><p>在封装Vue组件时，可以把<span style="color:red">动态的数据项</span>作为props自定义属性。自定义属性可以在当前组件的模板结构中被直接使用。</p><p>在子组件中声明两个要使用的props数据 比如向外界传递一个标题，作者 可以声明一个props数组</p><ul><li>外界可以传递指定的数据，到当前的组件中<figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:[<span class="string">'title'</span>,<span class="string">'author'</span>]</span><br></pre></td></tr></tbody></table></figure></li><li>然后可以在DOM结构中使用<span style="color:red">title</span>的值和<span style="color:red">author的值</span>，使用插值表达式<code>{{}}</code> 将两个值渲染到里面</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  <span class="title class_">Article</span>组件</span><br><span class="line">  &lt;h3&gt;标题：{{ title }}&lt;/h3&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>作者:{{ author }}<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">  抽刀断水水更流，举杯消愁愁更愁</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li>接着在使用这个组件期间，可以传递两个数据的值</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Article</span> title=<span class="string">"鹅鹅鹅"</span> author=<span class="string">"木子日天"</span>&gt;&lt;/<span class="title class_">Article</span>&gt;</span><br></pre></td></tr></tbody></table></figure><ul><li>也可以使用v-bind属性绑定的形式，为组件动态绑定props的值</li></ul><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Article</span> :title=<span class="string">"info.title"</span> :author=<span class="string">"info.name"</span>&gt;&lt;/<span class="title class_">Article</span>&gt;</span><br></pre></td></tr></tbody></table></figure><h4 id="props验证"><a href="#props验证" class="headerlink" title="props验证"></a>props验证</h4><p> 指的是：在封装组件时<span style="color:red">对外界传递过来的props数据</span>进行合法性的效验，从而防止数据不合法的问题。</p><p> 使用<span style="color:red">数组类型</span>props节点的话，无法为每个props<span style="color:red">指定具体的数据类型</span></p><h4 id="对象类型的props节点"><a href="#对象类型的props节点" class="headerlink" title="对象类型的props节点"></a><span style="color:red">对象类型</span>的props节点</h4><p> 使用对象类型的props节点，可以对每个props <span style="color:red">进行数据类型的效验</span></p><p> 对象类型的props节点，<span style="color:red">提供了多种数据验证方案</span></p><ol><li>基础的类型检查 <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">props</span>:{</span><br><span class="line">   <span class="comment">// title的属性值只能是数字类型</span></span><br><span class="line">  <span class="attr">title</span>:<span class="title class_">Number</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li>多个可能的类型  <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">props</span>:{</span><br><span class="line">   <span class="comment">// title的属性值可以是 "字符串" 或者 "数字"</span></span><br><span class="line">  <span class="attr">title</span>:[<span class="title class_">String</span>,<span class="title class_">Number</span>],</span><br><span class="line">}  </span><br></pre></td></tr></tbody></table></figure></li><li>必填项效验   <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">props</span>:{</span><br><span class="line">  <span class="attr">title</span>:{</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">String</span>,   <span class="comment">// 表示当前属性的值必须是String字符串类型</span></span><br><span class="line">    <span class="attr">required</span>:<span class="literal">true</span>  <span class="comment">// 表示当前属性是</span></span><br><span class="line">  }</span><br><span class="line">}  </span><br></pre></td></tr></tbody></table></figure></li><li>属性默认值  <figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">props</span>:{</span><br><span class="line">  <span class="attr">age</span>:{</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Number</span>,   <span class="comment">// 表示当前属性的值必须是String字符串类型</span></span><br><span class="line">    <span class="attr">default</span>:<span class="number">18</span>,   <span class="comment">// 如果有使用者没有指定 age 的值 则它的默认值为18</span></span><br><span class="line">  }</span><br><span class="line">}  </span><br></pre></td></tr></tbody></table></figure></li><li>自定义验证函数</li></ol><h4 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h4><p>指的是<span style="color:red">动态的切换组件的显示与隐藏。</span>vue提供了一个内置的<code>&lt;component&gt;</code>组件，专门用来实现组件的动态渲染。</p><ul><li><code>&lt;component&gt;</code> 是组件的<span style="color:red">占位符</span></li><li>通过 <span style="color:red">is属性</span> 动态指定 <span style="color:red">要渲染的组件名称</span></li><li><code>&lt;component is="要渲染的组件的名称"&gt;&lt;/component&gt;</code></li></ul><h5 id="使用keep-alive-保持这状态"><a href="#使用keep-alive-保持这状态" class="headerlink" title="使用keep-alive 保持这状态"></a>使用keep-alive 保持这状态</h5><p>默认情况下，切换动态组件时<span style="color:red">无法保持组件的状态</span>。这样就可以使用<code> &lt;keep-alive&gt;</code>组件保持动态组件的状态</p><p>使用方式非常简单</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"comName"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h3&gt;&lt;p&gt;组件之间可以相互引用，首先得&lt;span style=&quot;color:red&quot;&gt;注册后使用&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>不要熬夜</title>
    <link href="http://mrnobody233.github.io/2022/03/28/%E4%B8%8D%E8%A6%81%E7%86%AC%E5%A4%9C/"/>
    <id>http://mrnobody233.github.io/2022/03/28/%E4%B8%8D%E8%A6%81%E7%86%AC%E5%A4%9C/</id>
    <published>2022-03-28T14:31:41.000Z</published>
    <updated>2022-03-29T02:18:45.328Z</updated>
    
    <content type="html"><![CDATA[<h3 id="熬夜"><a href="#熬夜" class="headerlink" title="熬夜"></a><span style="color:#4D77FF">熬夜</span></h3><hr><h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p>昨天和工作室的小伙伴们一起看<a href="https://charet.github.io/">社恐废宅充电器</a>在玩一款新的游戏，叫做<span style="color:#5EE6EB">幽灵线: 东京</span>，我们更喜欢叫他<span style="color:#FFB72B">林正英模拟器</span><img src="http://i0.hdslb.com/bfs/article/51c890784afb0a55bb8a2d8af4431dcc4809eac3.jpg" alt="" width="50"></p><p>对了那个游戏长这样<img src="http://p2.itc.cn/q_70/images03/20210714/2ce935a73e8f4db89e26c91f37b6561f.jpeg" alt="" width="100">确实比较新颖，因为他的攻击方式是把手比作枪，用手射出子弹一样，给人眼前一亮的感觉，但是玩久了感觉有点单调，不算很耐玩的游戏，也许是它太贵了我买不起，要200多RMB。</p><hr><h4 id="然后"><a href="#然后" class="headerlink" title="然后"></a>然后</h4><p>我们的<a href="https://charet.github.io/">社恐废宅充电器</a>就开始了今天的<span style="color:#6A5495">熬夜</span>，他花了一晚上的时间通关了<span style="color:#5EE6EB">幽灵线: 东京</span>，虽然是<span style="color:red">简单版的</span>模式，但主要的是他通宵到到第二天中午才开始睡觉，这是他的睡姿<img src="https://raw.githubusercontent.com/MrNobody233/Pohot/main/blog/Nn_Sleep.jpg" width="100" alt="图片没有显示呀，网太差了吧~"> 睡得和<span style="color:red">死了</span>一样，这样的情况已经不是第一次了，我们也不是第一次提醒他，所以这里提前说明一下，如果他突然有一天走着走着就<span style="color:red">猝死了</span>，希望他不要来找我，因为我已经提醒了很多次了，</p><hr><h4 id="接着"><a href="#接着" class="headerlink" title="接着"></a>接着</h4><p>在寒假的时候我也熬夜，但是没有他这么严重，最多熬到四五点，偶尔六点多起来去吃早餐，我记得五点半去的时候老板娘还没有准备好，所以我等到六点在去吃的，挖槽，原来早饭这么好吃，特别是那个<span style="color:#DD4A48">猪血粉</span>，等学校解封我回我奶奶家，一定得再去吃一次，现在想起来那个老板娘还是我小学同学的妈妈，她告诉我她女儿去参军了，两年以后才会回来，我倒是挺期待她能被改变成什么样，但是我最希望的是老板娘能送我瓶<span style="color:#A05344">核桃味</span>的早餐奶给我喝，我太喜欢喝了，噗哈哈。</p><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>额，今天写的这个主要是做了一个新的分类，叫做<span style="color:#EEB76B">自言自语</span>，其目的是为了水博客，和分享关于自己有意思的事情，又或者是把自己可能会忘记的日常存在这里，所以最后还是点名一下主题把，就是希望我以后能少熬点夜，不能和那个SB一样，就当为了吃到好吃的<span style="color:#DD4A48">猪血粉</span>而努力吧，就这样，晚安~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;熬夜&quot;&gt;&lt;a href=&quot;#熬夜&quot; class=&quot;headerlink&quot; title=&quot;熬夜&quot;&gt;&lt;/a&gt;&lt;span style=&quot;color:#4D77FF&quot;&gt;熬夜&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
    <category term="自言自语" scheme="http://mrnobody233.github.io/tags/%E8%87%AA%E8%A8%80%E8%87%AA%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>实用网站</title>
    <link href="http://mrnobody233.github.io/2022/03/26/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    <id>http://mrnobody233.github.io/2022/03/26/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/</id>
    <published>2022-03-26T13:19:12.000Z</published>
    <updated>2022-03-28T14:58:43.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实用网站"><a href="#实用网站" class="headerlink" title="实用网站"></a>实用网站</h2><p>我的文件夹里有许多使用的网站，但也只是放在文件夹里，乱七八糟，没有整理，所以现在放在这里，以后就可以更加方便的利用这些网站</p><hr><h3 id="编程类"><a href="#编程类" class="headerlink" title="编程类"></a><span style="color:#00a8ff">编程类</span></h3><p><a href="https://flatuicolors.com/">颜色网站</a> 不知道如何配色可以看看介个网站</p><p><a href="https://colorhunt.co/">另一个颜色网站</a> 这个也不错</p><p><a href="https://unbug.github.io/codelf/">取名鬼才</a>不知道取什么变量名可以看看这个</p><h3 id="图片类"><a href="#图片类" class="headerlink" title="图片类"></a><span style="color:#9c88ff">图片类</span></h3><p><a href="https://wall.alphacoders.com/">wallpaper壁纸</a> 有许多挺不错的漂亮壁纸可以在这里看</p><p><a href="http://www.soutushenqi.com/home">搜图神器</a> 可以搜索超清的好康的图片 主要我是<span style="color:red">荣耀捐赠会员</span></p><h3 id="音乐类"><a href="#音乐类" class="headerlink" title="音乐类"></a><span style="color:#e84118">音乐类</span></h3><p><a href="https://music.liuzhijin.cn/">刘志进音乐直连搜索</a> 可以在这里搜索很多音乐</p><p><a href="https://link.hhtjim.com/">外链转换工具</a> 可以配合上一个网站获得音乐的mp3网址</p><h3 id="影视类"><a href="#影视类" class="headerlink" title="影视类"></a><span style="color:#4b4b4b">影视类</span></h3><p><a href="https://www.hwjyingshi.xyz/">hwj影视</a> 可以看各种电影和番剧 (<span style="color:#ff3838">使用手机打开会有广告，推荐开启PC端口 </span>)</p><p><a href="http://www.xfcdm.com/">寻剧吧</a> 也是看各种电影和番剧 (<span style="color:#ff3838">使用手机打开会有广告，推荐开启PC端口 </span>)</p><p><a href="https://www.bilibili.com/">蜀黍的网站</a> 你所热爱的就是你的生活 (<strong>陈睿 吃柠檬</strong>)</p><h3 id="娱乐类"><a href="#娱乐类" class="headerlink" title="娱乐类"></a><span style="color:#ff9f1a">娱乐类</span></h3><p><a href="https://chishenme.xyz/">今天吃什么</a> 不知道吃什么可以看看介个</p><p><a href="https://picrew.me/">Picrew</a> 随机生成头像，我的<a href="https://github.com/MrNobody233">github</a>的<span style="color:#afcfb7">头像</span>就是这里来的，是不是很好看 0.0<br> <img src="https://avatars.githubusercontent.com/u/96650292?v=4" alt="图片没有显示呀，网太差了吧~" width="100"></p><p><a href="https://www.dbbqb.com/">逗比拯救世界</a> 很多各种各样的<span style="color:#ad9d3e">表情包</span>，逗比必备哦。</p><img src="https://raw.githubusercontent.com/MrNobody233/Pohot/main/blog/cheems.jpg" alt="图片没有显示呀，网太差了吧~" width="100"><h2 id="无聊了继续更新-拜拜"><a href="#无聊了继续更新-拜拜" class="headerlink" title=" 无聊了继续更新 拜拜 "></a><span style="color:pink"> 无聊了继续更新 拜拜 </span></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实用网站&quot;&gt;&lt;a href=&quot;#实用网站&quot; class=&quot;headerlink&quot; title=&quot;实用网站&quot;&gt;&lt;/a&gt;实用网站&lt;/h2&gt;&lt;p&gt;我的文件夹里有许多使用的网站，但也只是放在文件夹里，乱七八糟，没有整理，所以现在放在这里，以后就可以更加方便的利用这些网站&lt;</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="网站" scheme="http://mrnobody233.github.io/tags/%E7%BD%91%E7%AB%99/"/>
    
    <category term="工具" scheme="http://mrnobody233.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Vue指令</title>
    <link href="http://mrnobody233.github.io/2022/03/26/Vue%E6%8C%87%E4%BB%A4/"/>
    <id>http://mrnobody233.github.io/2022/03/26/Vue%E6%8C%87%E4%BB%A4/</id>
    <published>2022-03-26T09:33:02.000Z</published>
    <updated>2022-03-26T11:19:52.738Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Vue指令"><a href="#Vue指令" class="headerlink" title="Vue指令"></a>Vue指令</h3><p>  虽然学习完了Vue，但还有许多地方木有掌握，所以今天就来复习一下Vue还没有掌握的指令</p><ul><li><p>按键修饰符</p></li><li><p>条件渲染指令</p></li><li><p>循环渲染指令</p><p>虽然只有一些内容，但还是要认真的写下去，不然就得去平板看我写的丑不拉几的字，我实在不忍心看下去，这也是在这里复习的原因之一。</p></li></ul><hr><h4 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h4><p>  在监听<strong>键盘</strong>事件的时候，我们需要判断详细的按键，此时，可以为<strong>键盘相关的事件</strong>添加<strong>按键修饰符</strong></p><p>  举一个非常简单的案例，当我们在登录页面输入完密码之后，按下<strong>回车键</strong>后使用Ajax发送数据 如何实现捏？</p><p>我们可以使用 <code>@keyup</code>事件</p><p><code>&lt;input type="password" @keyup.enter="commitAjax"&gt;</code></p><p>  这样在input表单中按下回车键就可以触发方法了 非常的方便，学废了。</p><hr><h4 id="条件渲染指令"><a href="#条件渲染指令" class="headerlink" title="条件渲染指令"></a>条件渲染指令</h4><p>这个好像挺简单的，既然打出来了，全当复习用了<br>这个东西主要用来辅助开发者<strong>按需控制DOM的显示与隐藏</strong><br>但是条件渲染指令有<strong>两个</strong></p><ul><li>v-if</li><li>v-show</li></ul><p>两者区别不大 但还是要讲一讲</p><p>继续举一个简单地例子</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"flag"</span>&gt;</span>这是被 v-if 控制的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- -------当flag为false的时候两者都会隐藏 但是隐藏的方法不一样-------- --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"flag"</span>&gt;</span>这是被 v-show 控制的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>v-if 会<strong>动态创建元素</strong>或者<strong>移除</strong><br>v-show 则是给元素添加 <code>display:none;</code>样式 来实现元素的显示和隐藏 </p><p><strong>差点忘记了还有一个 v-else</strong></p><p>v-else指令<strong>必须搭配</strong> v-if 来进行使用 否则将不会被识别 来看个简单地例子就会了</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"type === 'A'"</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">"type === 'B'"</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">"type === 'C'"</span>&gt;</span>一般<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>差<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>是不是很简单呢</p><hr><h4 id="循环渲染指令"><a href="#循环渲染指令" class="headerlink" title="循环渲染指令"></a>循环渲染指令</h4><p>实际上这个才是我要复习的内容，前面两个都太简单了，虽然这个也是，看看文档就会了，但是为了以后不用看文档，所以才认真写一写吧</p><p><strong>V-for</strong>列表渲染指令，用于开发者<strong>基于一个数组来循环渲染一个列表结构</strong></p><p>先来看看代码</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>:{</span><br><span class="line">  <span class="comment">// 列表数据</span></span><br><span class="line">  list[</span><br><span class="line">    {<span class="attr">id</span>: <span class="number">1</span> ,<span class="attr">name</span>: <span class="string">'木子日天'</span> },</span><br><span class="line">    {<span class="attr">id</span>: <span class="number">2</span> ,<span class="attr">name</span>: <span class="string">'李日天'</span> },</span><br><span class="line">    {<span class="attr">id</span>: <span class="number">3</span> ,<span class="attr">name</span>: <span class="string">'木子昊'</span> },</span><br><span class="line">  ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>要循环那个DOM 就给那个加上 <code>v-for="item in list"</code> </p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">'item in list'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>{{item.id}} ,{{item.name}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>item 是循环的每一项<br>list是被循环的数组 </p><p>结果就是</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>,木子日天</span><br><span class="line"><span class="number">2</span>,李日天</span><br><span class="line"><span class="number">3</span>,木子昊</span><br></pre></td></tr></tbody></table></figure><p>使用了v-for指定那么一定要绑定一个 <strong>:key属性</strong></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"item in list"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>{{item.id}} ,{{item.name}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>就酱紫 拜拜</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Vue指令&quot;&gt;&lt;a href=&quot;#Vue指令&quot; class=&quot;headerlink&quot; title=&quot;Vue指令&quot;&gt;&lt;/a&gt;Vue指令&lt;/h3&gt;&lt;p&gt;  虽然学习完了Vue，但还有许多地方木有掌握，所以今天就来复习一下Vue还没有掌握的指令&lt;/p&gt;
&lt;ul&gt;
&lt;li</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Vue" scheme="http://mrnobody233.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>First_Vue_Web</title>
    <link href="http://mrnobody233.github.io/2022/03/25/First-Vue-Web/"/>
    <id>http://mrnobody233.github.io/2022/03/25/First-Vue-Web/</id>
    <published>2022-03-25T10:45:09.000Z</published>
    <updated>2022-03-26T09:11:36.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为我的同学<a href="https://thirsty-c.github.io/">胃病患者</a>在上学期参加了，信工的移动安卓设计比赛，并获得了二等奖，我很是<strong>心动</strong> ，并不是心动二等奖，而是心动因为二等奖获得的<strong>雷蛇鼠标</strong>，虽然我已经买了一个比他更贵的鼠标，但是我好不爽，能白嫖为什么要买，所以我下定决心，去参加了这个学期的网站设计大赛，获得更高的奖品，至少给我一个<strong>雷蛇键盘</strong></p><hr><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>正好最近学完Vue,有用武之地，为了不让知识悄悄溜走，所以我决定使用Vue来制作本次项目，询问了举办方老师，可以使用Vue之类的东东，所以很快啊，我立马新建文件夹，可是不知道做什么类型的东西，思考许久，终于！！ 我决定做一个做烂的东西，也就是我们工作室的网站，但是是<strong>SPA（单页应用程序）</strong>，想法有了，就有动力去做了。正好比赛需要上交一份PPT，也就顺便把SPA的介绍在博客里面写好，这样就不用再去百度了，我真聪明，哈哈哈哈哈哈！。</p><hr><h3 id="SPA（单页面应用程序）"><a href="#SPA（单页面应用程序）" class="headerlink" title="SPA（单页面应用程序）"></a>SPA（单页面应用程序）</h3><h4 id="1-什么是单页面应用程序"><a href="#1-什么是单页面应用程序" class="headerlink" title="1.什么是单页面应用程序"></a>1.什么是单页面应用程序</h4><p><strong>单页面应用程序</strong> （英文名:<strong>S</strong>ingle <strong>P</strong>age <strong>A</strong>pplication）简称SPA，顾名思义，指的就是一个Web网站中只有<strong>唯一一个HTML页面</strong>，所有的功能和交互都在这唯一的一个页面内完成</p><h4 id="2-单页面应用程序的特点"><a href="#2-单页面应用程序的特点" class="headerlink" title="2.单页面应用程序的特点"></a>2.单页面应用程序的特点</h4><p>单页面应用程序将所有的功能局限于一个web页面中。<strong>仅在该web页面初始化时加载相应的资源</strong>（HTML，JavaScript，CSS）</p><p>一旦页面加载完成，SPA不会因为用户的操作而<strong>进行页面的重新加载或跳转</strong>。而是利用JavaScript动态的变换HTML内容，从而实现用户的交互。</p><h4 id="3-单页应用程序的优点"><a href="#3-单页应用程序的优点" class="headerlink" title="3.单页应用程序的优点"></a>3.单页应用程序的优点</h4><h5 id="良好的交互体验"><a href="#良好的交互体验" class="headerlink" title="良好的交互体验"></a>良好的交互体验</h5><ul><li>单页面应用的内容的改变不需要重新加载整个页面</li><li>获取数据也是通过Ajax异步获取</li><li>没有页面之间的跳转，所以不会出现“白屏现象”</li></ul><h5 id="良好的前后端工作分离模式"><a href="#良好的前后端工作分离模式" class="headerlink" title="良好的前后端工作分离模式"></a>良好的前后端工作分离模式</h5><ul><li>后端专注于提供API接口，更容易实现API接口的附庸</li><li>前端专注于页面的渲染，更利于前端工程化的发展</li></ul><h5 id="减轻服务器的压力"><a href="#减轻服务器的压力" class="headerlink" title="减轻服务器的压力"></a>减轻服务器的压力</h5><ul><li>服务器只需提供数据，不负责页面的合成与逻辑的处理，吞吐能力会提高几倍。</li></ul><h4 id="4-单页应用程序的缺点"><a href="#4-单页应用程序的缺点" class="headerlink" title="4.单页应用程序的缺点"></a>4.单页应用程序的缺点</h4><p> 1.首屏加载慢<br> 2.不利于SEO</p><hr><h2 id="长啥样？"><a href="#长啥样？" class="headerlink" title="长啥样？"></a>长啥样？</h2><p>  说了这么久那么做的到底咋样呢？实际上不怎么地，在制作期间参考了许多网站，包括学长写过的<a href="https://pjqdyd.github.io/Vue-bst-web/#/">工作室网站</a>发现我写的实在是太垃圾了，简直就是一坨屎一样，不过好歹是我第一次完成Vue作品，也使用了大量的<strong>Vant组件</strong>和<strong>Element组件</strong>，整体看起来不算很丑（自我安慰），相信我以后技术成熟了能够更加完善这个项目，不用再参考公众号的布局。哈哈，那么就来看一看吧。</p><h3 id="长这样。"><a href="#长这样。" class="headerlink" title="长这样。"></a>长这样。</h3><p><img src="https://raw.githubusercontent.com/MrNobody233/Pohot/main/First_Web_03.png" alt="1"></p><h3 id="这样。"><a href="#这样。" class="headerlink" title="这样。"></a>这样。</h3><p><img src="https://raw.githubusercontent.com/MrNobody233/Pohot/main/First_Web_02.png" alt="2"></p><h3 id="和这样"><a href="#和这样" class="headerlink" title="和这样"></a>和这样</h3><p><img src="https://raw.githubusercontent.com/MrNobody233/Pohot/main/First_Web_01.png" alt="3"></p><p>没有全截完 但是也可以看出 制作水平很一般了。 所以还需再接再厉。拜拜~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;因为我的同学&lt;a href=&quot;https://thirsty-c.github.io/&quot;&gt;胃病患者&lt;/a&gt;在上学期参加了，信工的移动安卓设计</summary>
      
    
    
    
    <category term="web前端" scheme="http://mrnobody233.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="项目" scheme="http://mrnobody233.github.io/tags/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="前端" scheme="http://mrnobody233.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>不要被外表迷惑</title>
    <link href="http://mrnobody233.github.io/2022/03/25/%E4%B8%8D%E8%A6%81%E8%A2%AB%E5%A4%96%E8%A1%A8%E8%BF%B7%E6%83%91/"/>
    <id>http://mrnobody233.github.io/2022/03/25/%E4%B8%8D%E8%A6%81%E8%A2%AB%E5%A4%96%E8%A1%A8%E8%BF%B7%E6%83%91/</id>
    <published>2022-03-25T05:30:58.000Z</published>
    <updated>2022-03-28T14:32:39.482Z</updated>
    
    <content type="html"><![CDATA[<p>本来这个博客很早就可以完成的，都怪我被迷惑了，因为那个网站实在是太漂亮了，我也想整一个 就是<a href="https://tomotoes.com/">这个网站(可以点我)</a>，他实在是太漂亮了，原来网站可以这么漂亮,所以我决定使用这个网站，但是发现他的配置文件完全看不懂，我实在是太菜了。 </p><p>感觉自己白学前端了，所以我下定决心，毕业以后一定不要做<del>程序员</del>   还是去送外卖好了QWQ,所以今天我学废了，自己垃圾就不要去看大佬作品，否则会怀疑人生，马上自闭。</p><p>就酱紫，拜拜~~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本来这个博客很早就可以完成的，都怪我被迷惑了，因为那个网站实在是太漂亮了，我也想整一个 就是&lt;a href=&quot;https://tomotoes.com/&quot;&gt;这个网站(可以点我)&lt;/a&gt;，他实在是太漂亮了，原来网站可以这么漂亮,所以我决定使用这个网站，但是发现他的配置文件完全</summary>
      
    
    
    
    <category term="生活" scheme="http://mrnobody233.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="智障" scheme="http://mrnobody233.github.io/tags/%E6%99%BA%E9%9A%9C/"/>
    
  </entry>
  
</feed>
